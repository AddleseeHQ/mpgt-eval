LP: Well, yeah, but you do what you want.
LP: What time is my appointment with the doctor? # request(appt(time)) @ G(LP, get-info(appt(time)))
RC: I think it's 10 o'clock. # inform(appt(time)) @ AG(LP, get-info(appt(time)))
RC: What time is the appointment? # request(appt(time)) @ G(RC, get-info(appt(time)))
RC: I have an appointment with the doctor. # request(appt(general_info)) @ G(RC, get-info(appt(general_info)))
ARI: You'll have several appointments with different health professionals, at least three. First, a nurse will ask you questions about your health and carry out an initial assessment of your current condition. Next, you will discuss your difficulties with a neuropsychologist who will suggest tests to assess your abilities as accurately as possible. Then, you will see a geriatrician who will summarise all this data and suggest different types of follow-up depending on your results. # inform(appt(general_info)) @ AG(RC, get-info(appt(general_info)))
LP: And who is my geriatrician?
ARI: I'm sorry, but I can't help you. # cant-help()
RC: That's a shame. # give-feedback(negative)
LP: And where is the consultation room to go see my doctor?
RC: Is it my turn?
ARI: I'm afraid I can't help you. # cant-help()
RC: Is it right or left?
LP: Is there a reception at the hospital? # request(location(reception)) @ G(LP, go-to(reception))
RC: Yes, I think so. # affirm() @ AG(LP, go-to(reception))
RC: Where is the reception? # request(location(reception)) @ G(RC, go-to(reception))
ARI: I'm sorry, but I can't help you. # cant-help()
RC: Where do I go for information? # request(location(reception)) @ G(RC, go-to(reception))
LP: I'd like a coffee. # request(beverage(coffee)) @ G(LP, drink(coffee))
RC: Where is the cafeteria? # request(location(cafe)) @ G(RC, go-to(cafe))
ARI: There's a cafeteria on the ground floor, near the courtyard. # inform(beverage(coffee)); inform(location(cafe)) @ AG(LP, drink(coffee)); AG(RC, go-to(cafe))
LP: How do we get to the ground floor? # request(directions(ground_floor)) @ G(LP+RC, go-to(ground_floor))
RC: How do we get to the ground floor? # request(directions(ground_floor)) @ G(LP+RC, go-to(ground_floor))
ARI: I'm afraid I can't help you. # cant-help()
RC: Which floor is the cafeteria on? # request(location(cafe)) @ G(RC, go-to(cafe))
ARI: I'm afraid I can't help you. # cant-help()
RC: Where is the cafeteria? # request(location(cafe)) @ G(RC, go-to(cafe))
ARI: I'm sorry, but I can't help you. # cant-help()
LP: How much time do we have for a coffee before the first consultation? # request(appt(time)) @ G(LP, get-info(appt(time)))
ARI: You'll have several appointments with different health professionals, at least three. First, a nurse will ask you questions about your health and carry out an initial assessment of your current condition. Next, you will discuss your difficulties with a neuropsychologist who will suggest tests to assess your abilities as accurately as possible. Then, you will see a geriatrician who will summarise all this data and suggest different types of follow-up depending on your results. # inform(appt(general_info)) @ AG(LP, get-info(appt(time)))
RC: Yes, but at what time? # affirm(); request(appt(time)) @ G(RC, get-info(appt(time)))
ARI: I'm afraid I can't help you. # cant-help()
LP: I was told that there was a lift in the hospital to get to the next floor. Does he know where it is? # request(location(lifts)) @ G(LP, go-to(lifts))
RC: Where is the lift to go up? # request(location(lifts)) @ G(RC, go-to(lifts))
ARI: I'm sorry, but I can't help you. # cant-help()
LP: Are there stairs? # request(location(stairs)) @ G(LP, go-to(stairs))
RC: And the stairs? # request(location(stairs)) @ G(RC, go-to(stairs))
RC: Are there no stairs to get to the next floor? # request(location(stairs)) @ G(RC, go-to(stairs))
ARI: Yes, of course. # affirm() @ AG(LP, go-to(stairs)); AG(RC, go-to(stairs))
RC: And where are they? # request(location(stairs)) @ G(RC, go-to(stairs))
ARI: I'm afraid I can't help you. # cant-help()
RC: Where should I go for information? # request(location(reception)) @ G(RC, go-to(reception))
ARI: I'm afraid I can't help you. # cant-help()
RC: What should we do? # request(help)
ARI: I'm sorry, but I can't help you. # cant-help()
LP: And how can it help us? # request(help)
RC: So this... # incomplete-da()
RC: What can you tell us? # request(ari(wcud)) @ G(RC, get-info(ari(wcud)))
RC: How many floors does the hospital have? # request(clinic(num_floors)) @ G(RC, get-info(clinic(num_floors)))
ARI: I'm sorry, but I can't help you. # cant-help()
LP: But I'm thirsty. I need water. # request(beverage(water)) @ G(LP, drink(water))
RC: But we are thirsty, we need water. # request(beverage(water)) @ G(LP+RC, drink(water))
ARI: There are a few options available as part of your visit, and there's also a cafeteria on the ground floor. # inform(beverage(water)) @ AG(LP+RC, drink(water)
RC: And is there water in the cafeteria? # request(beverage(water)) @ G(RC, drink(water))
ARI: Of course. # affirm() @ AG(RC, drink(water))
LP: Is there coffee too? # request(beverage(coffee)) @ G(LP, drink(coffee))
RC: And coffee? Is there coffee? # request(beverage(coffee)) @ G(RC, drink(coffee))
ARI: Absolutely. # affirm() @ AG(LP, drink(coffee)); AG(RC, drink(coffee))
RC: And tea? # request(beverage(tea)) @ G(RC, drink(tea))
ARI: Yes. # affirm() @ AG(RC, drink(tea))
LP: What is there to eat? # request(food(menu)) @ G(LP, eat())
RC: What can we eat? # request(food(menu)) @ G(LP+RC, eat())
ARI: I'm afraid I can't help you. # cant-help()
RC: Are there no cakes? # request(food(cake)) @ G(RC, eat(cake))
ARI: Yes. # affirm() @ AG(RC, eat(cake))
RC: Oh.
LP: Yes, there are cakes? # r-confirm(food(cake)) @ G(LP, eat(cake))
RC: Yes, there are cakes. # p-confirm(food(cake)) @ AG(LP, eat(cake))
RC: What kind of cakes are there? # request(food(cake)) @ G(RC, eat(cake))
ARI: Of course. # affirm() @ AG(LP, eat(cake))
RC: Sugar cake? Honey cake? Are there honey cakes? # request(food(cake)) @ G(RC, eat(cake))
ARI: Lunch will be offered at midday if you have afternoon appointments. A snack may be offered after your appointment with the nurse. # inform(food) @ AG(RC, eat())
RC: Oh! That's nice. # give-feedback(positive)
LP: What's on the menu? # request(food(menu)) @ G(LP, eat())
RC: What's on the menu? # request(food(menu)) @ G(RC, eat())
ARI: Lunch will be offered at midday if you have afternoon appointments. A snack may be offered after your appointment with the nurse. # inform(food) @ AG(LP, eat()); AG(RC, eat())
RC: Is there any ham? # request(food(ham)) @ G(RC, eat(ham))
ARI: Yes. # affirm() @ AG(RC, eat(ham))
LP: How do we inform them of any allergies? # request(allergy_info) @ G(LP, get-info(allergy_info))
RC: And what should you do if you have an allergy? # request(allergy_info) @ G(RC, get-info(allergy_info))
ARI: I'm afraid I can't help you. # cant-help()
RC: If you are ill, if you can't eat...
