{"src": "ARI : Hello . I 'm ARI the robot . Can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) RP : I have an appointment . I 'd like to know where I 've got to ... where is ... where is the appointment for um , the geriatric ward . # request ( appt ( place ) ) @ G ( RP , get-info ( appt ( place ) ) ) ARI : Sorry , I do n't have this information . You have to go to the reception . # cant-help ( ) ; suggest ( going-to ( reception ) ) RP : For any appointment , I have to go to the reception ? Because ARI : Yes . # affirm ( ) [start] RP : I have two appointments in a row . ARI : Yes , absolutely . # affirm ( ) RP : Ok well , thank you . That 's a shame then . # acknowledge ( ) ; thank ( ) ; give-feedback ( negative ) ARI : Thank you . # thank ( ) LC : Um , hello . Could you help me ? # greet ( ) ; request ( help ) ARI : Yes . # affirm ( ) LC : Um , can you tell me where I can get a coffee please ? # request ( beverage ( coffee ) ) [MASK] LC : You know , I 'd really like a coffee . # request ( beverage ( coffee ) ) [MASK] ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( beverage ( coffee ) ) [MASK] LC : Thank you . # thank ( ) [MASK] ARI : Thank you . See you soon . # thank ( ) ; bye ( ) RP : Can you # incomplete-da ( ) ARI : Have a nice day . # bye ( ) RP : repeat what you said about coffee ? I did n't hear it very well . # r-repet ( beverage ( coffee ) ) ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # p-repet ( beverage ( coffee ) ) RP : And , can a patient accompany me or can I accompany a patient to the cafeteria ? ARI : Yes . Of course . # affirm ( ) RP : Ok . Thank you . # acknowledge ( ) ; thank ( ) ARI : Thank you . See you around . # thank ( ) ; bye ( ) RP : In the cafeteria # incomplete-da ( ) ARI : Have a nice day . # bye ( ) RP : do they serve food too or just drinks ? # request ( food ) [MASK] ARI : Yes , absolutely . # affirm ( ) [MASK] RP : And what time does the cafeteria close ? # request ( cafe ( opening_times ( closing_time ) ) ) [end] ARI : It 's at 11 o'clock . # inform ( cafe ( opening_times ( closing_time ) ) ) RP : At 11 o'clock ? # r-confirm ( cafe ( opening_times ( closing_time ) ) ) RP : Um ... # incomplete-da ( ) RP : Thank you . # thank ( ) ARI : Thank you , see you around , have a nice day . # thank ( ) ; bye ( )", "tgt": "RP : I have two appointments in a row . ARI : Yes , absolutely . # affirm ( ) RP : Ok well , thank you . That 's a shame then . # acknowledge ( ) ; thank ( ) ; give-feedback ( negative ) ARI : Thank you . # thank ( ) LC : Um , hello . Could you help me ? # greet ( ) ; request ( help ) ARI : Yes . # affirm ( ) LC : Um , can you tell me where I can get a coffee please ? # request ( beverage ( coffee ) ) @ G ( LC , drink ( coffee ) ) LC : You know , I 'd really like a coffee . # request ( beverage ( coffee ) ) @ G ( LC , drink ( coffee ) ) ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( beverage ( coffee ) ) @ AG ( LC , drink ( coffee ) ) LC : Thank you . # thank ( ) @ CG ( LC , drink ( coffee ) ) ARI : Thank you . See you soon . # thank ( ) ; bye ( ) RP : Can you # incomplete-da ( ) ARI : Have a nice day . # bye ( ) RP : repeat what you said about coffee ? I did n't hear it very well . # r-repet ( beverage ( coffee ) ) ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # p-repet ( beverage ( coffee ) ) RP : And , can a patient accompany me or can I accompany a patient to the cafeteria ? ARI : Yes . Of course . # affirm ( ) RP : Ok . Thank you . # acknowledge ( ) ; thank ( ) ARI : Thank you . See you around . # thank ( ) ; bye ( ) RP : In the cafeteria # incomplete-da ( ) ARI : Have a nice day . # bye ( ) RP : do they serve food too or just drinks ? # request ( food ) @ G ( RP , eat ( ) ) ARI : Yes , absolutely . # affirm ( ) @ AG ( RP , eat ( ) ) RP : And what time does the cafeteria close ? # request ( cafe ( opening_times ( closing_time ) ) )"}
{"src": "LC : Hello . # greet ( ) ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) [start] LC : We 're looking for a way to get to room 17 , are n't we ? # request ( directions ( room_17 ) ) [MASK] RP : Yes . # affirm ( ) RP : Yes , we need to go to room 17 for treatment . # request ( directions ( room_17 ) ) [MASK] ARI : You have to enter the second building behind you . Then it 's the second door on the left . # inform ( directions ( room_17 ) ) [MASK] LC : Thank you . # thank ( ) [MASK] RP : Thank you . # thank ( ) LC : Do you , do you know what time our appointment is ? # request ( appt ( time ) ) [MASK] RP : Do you need the name ? ARI : You 'll have several appointments with different health professionals , at least three . First , a nurse will ask you questions about your health and carry out an initial assessment of your current condition . Next , you will discuss your difficulties with a neuropsychologist who will suggest tests to assess your abilities as accurately as possible . Then , you will see a geriatrician who will summarise all this data and suggest different types of follow-up depending on your results . # inform ( appt ( general_info ) ) RP : Thank you , but I ca n't hear very well . Could n't you speak a little louder ? # thank ( ) ; change-volume ( turn_up ) [end] ARI : Sorry , but I ca n't help you . # cant-help ( ) LC : Ok. # acknowledge ( ) RP : Thank you . # thank ( ) ARI : You 're welcome , I 'm here to answer your questions . # offer-help ( ) LC : Thank you ARI , have a nice day . # thank ( ) ; bye ( ) RP : Thank you . # thank ( ) ARI : Thank you , see you around , have a nice day . # thank ( ) ; bye ( )", "tgt": "LC : We 're looking for a way to get to room 17 , are n't we ? # request ( directions ( room_17 ) ) @ G ( LC+RP , go-to ( room_17 ) ) RP : Yes . # affirm ( ) RP : Yes , we need to go to room 17 for treatment . # request ( directions ( room_17 ) ) @ G ( LC+RP , go-to ( room_17 ) ) ARI : You have to enter the second building behind you . Then it 's the second door on the left . # inform ( directions ( room_17 ) ) @ AG ( LC+RP , go-to ( room_17 ) ) LC : Thank you . # thank ( ) @ CG ( LC+RP , go-to ( room_17 ) ) RP : Thank you . # thank ( ) LC : Do you , do you know what time our appointment is ? # request ( appt ( time ) ) @ G ( LC , get-info ( appt ( time ) ) ) RP : Do you need the name ? ARI : You 'll have several appointments with different health professionals , at least three . First , a nurse will ask you questions about your health and carry out an initial assessment of your current condition . Next , you will discuss your difficulties with a neuropsychologist who will suggest tests to assess your abilities as accurately as possible . Then , you will see a geriatrician who will summarise all this data and suggest different types of follow-up depending on your results . # inform ( appt ( general_info ) ) RP : Thank you , but I ca n't hear very well . Could n't you speak a little louder ? # thank ( ) ; change-volume ( turn_up )"}
{"src": "ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) RP : Can you ask if there is a cafeteria ? Because I 'd really like a coffee before the consultation . # request ( location ( cafe ) ) ; request ( beverage ( coffee ) ) @ G ( RP , go-to ( cafe ) ) ; G ( RP , drink ( coffee ) ) LC : Yes . # affirm ( ) LC : Um hello , could you tell me the address um where the cafeteria is ? Because my friend would like to get something . # greet ( ) ; request ( location ( cafe ) ) @ G ( LC , go-to ( cafe ) ) ARI : Yes of course . There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( location ( cafe ) ) @ AG ( LC , go-to ( cafe ) ) ; AG ( RP , go-to ( cafe ) ) RP : I really need to go to the toilet before going to the consultation . Can you ask where the toilet is please ? # request ( location ( toilet ) ) @ G ( RP , go-to ( toilet ) ) LC : I 'm going to speak for my friend . My friend would like to go to the toilet before her consultation . Can you tell me where it is ? # request ( location ( toilet ) ) @ G ( LC , go-to ( toilet ) ) ; G ( RP , go-to ( toilet ) ) ARI : Very easy ! You have to go to the corridor at the end of the room . It 's the second door on the right . # inform ( directions ( toilet ) ) @ AG ( LC , go-to ( toilet ) ) ; AG ( RP , go-to ( toilet ) ) RP : To go and see the person I told you about , I do n't know exactly where it is or which department it 's in , but it 's room 17 . Can he tell us a bit more about where this room 17 is ? # request ( location ( room_17 ) ) @ G ( LC+RP , go-to ( room_17 ) ) LC : Um , do you know where room 17 is ? # request ( location ( room_17 ) ) @ G ( LC , go-to ( room_17 ) ) ARI : You continue along the building , take the lift , and it 's on the second floor . # inform ( directions ( room_17 ) ) @ AG ( LC+RP , go-to ( room_17 ) ) [start] LC : Thank you . # thank ( ) [MASK] RP : We have an appointment at 5 PM in cardiology , ask if there are any delays to the appointment . LC : Do you know if there are any delays in the cardiology department ? My friend has an appointment at 5 PM . ARI : Sorry , I do n't have this information . You have to go to the reception . # cant-help ( ) ; suggest ( going-to ( reception ) ) LC : Ok. # acknowledge ( ) ARI : Thank you . # thank ( ) RP : We have an appointment at 5 PM but I 'm not sure in which department . It 's with doctor something . # request ( appt ( place ) ) [MASK] LC : That 's not accurate . LC : Well , she forgot the name of the doctor and then his specialty , can you ... # request ( doctor ( name ) ) , request ( doctor ( specialty ) ) [MASK] ARI : Sorry , I do n't have this information . I 'll call a nurse to inform you . # cant-help ( ) ; call-nurse ( ) LC : Thank you . # thank ( ) ARI : Thank you . # thank ( ) RP : It 's very hot . I 'd really like a drink before the consultation . Can you ask if there 's either a vending machine or a cafeteria ? # request ( beverage ) ; request ( location ( vending_machine ) ) ; request ( location ( cafe ) ) [MASK] LC : Um so , is there a vending machine nearby ? To get something to drink . # request ( location ( vending_machine ) ) ; request ( beverage ) [MASK] ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( directions ( cafe ) ) [MASK] [end] RP : Do you know , can you ask when the cafeteria closes ? Because we do n't have time to have something before the consultation but I 'd like a drink . I 'd like to know what time it closes . # request ( cafe ( opening_times ( closing_time ) ) ) @ G ( RP , get-info ( cafe ( opening_times ( closing_time ) ) ) ) LC : Could you tell us when the cafeteria closes ? Because ... # request ( cafe ( opening_times ( closing_time ) ) ) @ G ( LC+RP , get-info ( cafe ( opening_times ( closing_time ) ) ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LC : Ah , thank you , never mind . # thank ( ) ARI : Thank you . # thank ( ) RP : I was told the geriatric ward is on the second floor . Can you ask if there 's a lift ? # request ( location ( lifts ) ) @ G ( RP , go-to ( geriatric_ward ) ) LC : There 's a lift to the geriatric ward , um , it must be on the second floor . # request ( location ( lifts ) ) @ G ( LC , go-to ( geriatric_ward ) ) ARI : Yes , absolutely . # affirm ( ) @ AG ( LC , go-to ( geriatric_ward ) ) ; AG ( RP , go-to ( geriatric_ward ) ) RP : Is the geriatric ward easy to find ? # request ( directions ( geriatric_ward ) ) @ G ( RP , go-to ( geriatric_ward ) ) LC : Is it easy to find the lift to the geriatric ward ? # request ( directions ( geriatric_ward ) ) @ G ( LC , go-to ( geriatric_ward ) ) ARI : Yes . You have to enter the second building behind you . Then it 's the second door on the left . # affirm ( ) ; inform ( directions ( geriatric_ward ) ) @ AG ( LC , go-to ( geriatric_ward ) ) ; AG ( RP , go-to ( geriatric_ward ) ) LC : Thank you . # thank ( ) @ CG ( LC , go-to ( geriatric_ward ) ) ; CG ( RP , go-to ( geriatric_ward ) ) ARI : Thank you . # thank ( ) ARI : See you later , have a nice day . # bye ( )", "tgt": "LC : Thank you . # thank ( ) @ CG ( LC+RP , go-to ( room_17 ) ) RP : We have an appointment at 5 PM in cardiology , ask if there are any delays to the appointment . LC : Do you know if there are any delays in the cardiology department ? My friend has an appointment at 5 PM . ARI : Sorry , I do n't have this information . You have to go to the reception . # cant-help ( ) ; suggest ( going-to ( reception ) ) LC : Ok. # acknowledge ( ) ARI : Thank you . # thank ( ) RP : We have an appointment at 5 PM but I 'm not sure in which department . It 's with doctor something . # request ( appt ( place ) ) @ G ( RP , get-info ( appt ( place ) ) ) LC : That 's not accurate . LC : Well , she forgot the name of the doctor and then his specialty , can you ... # request ( doctor ( name ) ) , request ( doctor ( specialty ) ) @ G ( LC , get-info ( doctor ( name ) ) ) ; G ( RP , get-info ( doctor ( name ) ) ) ; G ( LC , get-info ( doctor ( specialty ) ) ) ; G ( RP , get-info ( doctor ( specialty ) ) ) ARI : Sorry , I do n't have this information . I 'll call a nurse to inform you . # cant-help ( ) ; call-nurse ( ) LC : Thank you . # thank ( ) ARI : Thank you . # thank ( ) RP : It 's very hot . I 'd really like a drink before the consultation . Can you ask if there 's either a vending machine or a cafeteria ? # request ( beverage ) ; request ( location ( vending_machine ) ) ; request ( location ( cafe ) ) @ G ( RP , drink ( ) ) ; G ( RP , go-to ( vending_machine ) ) ; G ( RP , go-to ( cafe ) ) LC : Um so , is there a vending machine nearby ? To get something to drink . # request ( location ( vending_machine ) ) ; request ( beverage ) @ G ( LC , go-to ( vending_machine ) ) ; G ( LC , drink ( ) ) ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( directions ( cafe ) ) @ AG ( LC , drink ( ) ) ; AG ( RP , drink ( ) ) ; AG ( LC , go-to ( cafe ) ) ; AG ( RP , go-to ( cafe ) )"}
{"src": "ARI : Hello . My name is ARI . Can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) LC : Hello , so what do we need to find as ... # incomplete-da ( ) RP : So I think yes , we 'll ask him you want is there a cafeteria or a place where we can eat . # suggest ( requesting ( location ( cafe ) ) ) @ G ( LC+RP , eat ( ) ) [start] ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) [MASK] LC : Ok , thank you . # acknowledge ( ) ; thank ( ) [MASK] RP : Okay , perfect . # acknowledge ( ) ; give-feedback ( positive ) RP : Do you want to have a coffee before your appointment ? # suggest ( drinking ( coffee ) ) [MASK] LC : Yes , since we have half an hour before the appointment we can have something . # accept-sugg ( drinking ( coffee ) ) [MASK] RP : Perfect , let 's go then . LC : Ok . RP : Ok , we 'll take it slowly , we 'll get there . LC : Yes . # affirm ( ) RP : So we can ask where the counter is to get a coffee ? # suggest ( requesting ( beverage ( coffee ) ) ) [MASK] LC : Yes . # accept-sugg ( requesting ( beverage ( coffee ) ) ) [MASK] RP : Ok. # acknowledge ( ) LC : Umm ... Where exactly do you go for a coffee ? # request ( location ( cafe ) ) [MASK] ARI : I 'm sorry , but I ca n't help you . # cant-help ( location ( cafe ) ) RP : We 'll ask him again . RP : Umm ... We 're looking for the cafeteria . # request ( location ( cafe ) ) [MASK] [end] ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) @ AG ( LC+RP , go-to ( cafe ) ) RP : Yes well thank you . # acknowledge ( ) ; thank ( ) @ CG ( LC+RP , go-to ( cafe ) ) RP : However , he was n't able to tell us if there was a special counter for coffees , it does n't matter .", "tgt": "ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) @ AG ( LC+RP , eat ( ) ) LC : Ok , thank you . # acknowledge ( ) ; thank ( ) @ CG ( LC+RP , eat ( ) ) RP : Okay , perfect . # acknowledge ( ) ; give-feedback ( positive ) RP : Do you want to have a coffee before your appointment ? # suggest ( drinking ( coffee ) ) @ G ( RP , drink ( coffee ) ) LC : Yes , since we have half an hour before the appointment we can have something . # accept-sugg ( drinking ( coffee ) ) @ G ( LC+RP , drink ( coffee ) ) RP : Perfect , let 's go then . LC : Ok . RP : Ok , we 'll take it slowly , we 'll get there . LC : Yes . # affirm ( ) RP : So we can ask where the counter is to get a coffee ? # suggest ( requesting ( beverage ( coffee ) ) ) @ G ( RP , drink ( coffee ) ) LC : Yes . # accept-sugg ( requesting ( beverage ( coffee ) ) ) @ G ( LC+RP , drink ( coffee ) ) RP : Ok. # acknowledge ( ) LC : Umm ... Where exactly do you go for a coffee ? # request ( location ( cafe ) ) @ G ( LC , drink ( coffee ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( location ( cafe ) ) RP : We 'll ask him again . RP : Umm ... We 're looking for the cafeteria . # request ( location ( cafe ) ) @ G ( LC+RP , go-to ( cafe ) )"}
{"src": "LP : Well , yeah , but you do what you want . LP : What time is my appointment with the doctor ? # request ( appt ( time ) ) @ G ( LP , get-info ( appt ( time ) ) ) RC : I think it 's 10 o'clock . # inform ( appt ( time ) ) @ AG ( LP , get-info ( appt ( time ) ) ) RC : What time is the appointment ? # request ( appt ( time ) ) @ G ( RC , get-info ( appt ( time ) ) ) RC : I have an appointment with the doctor . # request ( appt ( general_info ) ) @ G ( RC , get-info ( appt ( general_info ) ) ) ARI : You 'll have several appointments with different health professionals , at least three . First , a nurse will ask you questions about your health and carry out an initial assessment of your current condition . Next , you will discuss your difficulties with a neuropsychologist who will suggest tests to assess your abilities as accurately as possible . Then , you will see a geriatrician who will summarise all this data and suggest different types of follow-up depending on your results . # inform ( appt ( general_info ) ) @ AG ( RC , get-info ( appt ( general_info ) ) ) LP : And who is my geriatrician ? ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) RC : That 's a shame . # give-feedback ( negative ) LP : And where is the consultation room to go see my doctor ? RC : Is it my turn ? ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Is it right or left ? LP : Is there a reception at the hospital ? # request ( location ( reception ) ) @ G ( LP , go-to ( reception ) ) RC : Yes , I think so . # affirm ( ) @ AG ( LP , go-to ( reception ) ) RC : Where is the reception ? # request ( location ( reception ) ) @ G ( RC , go-to ( reception ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) RC : Where do I go for information ? # request ( location ( reception ) ) @ G ( RC , go-to ( reception ) ) LP : I 'd like a coffee . # request ( beverage ( coffee ) ) @ G ( LP , drink ( coffee ) ) RC : Where is the cafeteria ? # request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( beverage ( coffee ) ) ; inform ( location ( cafe ) ) @ AG ( LP , drink ( coffee ) ) ; AG ( RC , go-to ( cafe ) ) LP : How do we get to the ground floor ? # request ( directions ( ground_floor ) ) @ G ( LP+RC , go-to ( ground_floor ) ) RC : How do we get to the ground floor ? # request ( directions ( ground_floor ) ) @ G ( LP+RC , go-to ( ground_floor ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Which floor is the cafeteria on ? # request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Where is the cafeteria ? # request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : How much time do we have for a coffee before the first consultation ? # request ( appt ( time ) ) @ G ( LP , get-info ( appt ( time ) ) ) ARI : You 'll have several appointments with different health professionals , at least three . First , a nurse will ask you questions about your health and carry out an initial assessment of your current condition . Next , you will discuss your difficulties with a neuropsychologist who will suggest tests to assess your abilities as accurately as possible . Then , you will see a geriatrician who will summarise all this data and suggest different types of follow-up depending on your results . # inform ( appt ( general_info ) ) @ AG ( LP , get-info ( appt ( time ) ) ) RC : Yes , but at what time ? # affirm ( ) ; request ( appt ( time ) ) @ G ( RC , get-info ( appt ( time ) ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) LP : I was told that there was a lift in the hospital to get to the next floor . Does he know where it is ? # request ( location ( lifts ) ) @ G ( LP , go-to ( lifts ) ) RC : Where is the lift to go up ? # request ( location ( lifts ) ) @ G ( RC , go-to ( lifts ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : Are there stairs ? # request ( location ( stairs ) ) @ G ( LP , go-to ( stairs ) ) RC : And the stairs ? # request ( location ( stairs ) ) @ G ( RC , go-to ( stairs ) ) [start] RC : Are there no stairs to get to the next floor ? # request ( location ( stairs ) ) [MASK] ARI : Yes , of course . # affirm ( ) [MASK] RC : And where are they ? # request ( location ( stairs ) ) [MASK] ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Where should I go for information ? # request ( location ( reception ) ) [MASK] ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : What should we do ? # request ( help ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : And how can it help us ? # request ( help ) RC : So this ... # incomplete-da ( ) RC : What can you tell us ? # request ( ari ( wcud ) ) [MASK] RC : How many floors does the hospital have ? # request ( clinic ( num_floors ) ) [MASK] ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : But I 'm thirsty . I need water . # request ( beverage ( water ) ) [MASK] RC : But we are thirsty , we need water . # request ( beverage ( water ) ) [MASK] ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( beverage ( water ) ) [MASK] RC : And is there water in the cafeteria ? # request ( beverage ( water ) ) [MASK] ARI : Of course . # affirm ( ) [MASK] LP : Is there coffee too ? # request ( beverage ( coffee ) ) [MASK] RC : And coffee ? Is there coffee ? # request ( beverage ( coffee ) ) [MASK] ARI : Absolutely . # affirm ( ) [MASK] [end] RC : And tea ? # request ( beverage ( tea ) ) @ G ( RC , drink ( tea ) ) ARI : Yes . # affirm ( ) @ AG ( RC , drink ( tea ) ) LP : What is there to eat ? # request ( food ( menu ) ) @ G ( LP , eat ( ) ) RC : What can we eat ? # request ( food ( menu ) ) @ G ( LP+RC , eat ( ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Are there no cakes ? # request ( food ( cake ) ) @ G ( RC , eat ( cake ) ) ARI : Yes . # affirm ( ) @ AG ( RC , eat ( cake ) ) RC : Oh . LP : Yes , there are cakes ? # r-confirm ( food ( cake ) ) @ G ( LP , eat ( cake ) ) RC : Yes , there are cakes . # p-confirm ( food ( cake ) ) @ AG ( LP , eat ( cake ) ) RC : What kind of cakes are there ? # request ( food ( cake ) ) @ G ( RC , eat ( cake ) ) ARI : Of course . # affirm ( ) @ AG ( LP , eat ( cake ) ) RC : Sugar cake ? Honey cake ? Are there honey cakes ? # request ( food ( cake ) ) @ G ( RC , eat ( cake ) ) ARI : Lunch will be offered at midday if you have afternoon appointments . A snack may be offered after your appointment with the nurse . # inform ( food ) @ AG ( RC , eat ( ) ) RC : Oh ! That 's nice . # give-feedback ( positive ) LP : What 's on the menu ? # request ( food ( menu ) ) @ G ( LP , eat ( ) ) RC : What 's on the menu ? # request ( food ( menu ) ) @ G ( RC , eat ( ) ) ARI : Lunch will be offered at midday if you have afternoon appointments . A snack may be offered after your appointment with the nurse . # inform ( food ) @ AG ( LP , eat ( ) ) ; AG ( RC , eat ( ) ) RC : Is there any ham ? # request ( food ( ham ) ) @ G ( RC , eat ( ham ) ) ARI : Yes . # affirm ( ) @ AG ( RC , eat ( ham ) ) LP : How do we inform them of any allergies ? # request ( allergy_info ) @ G ( LP , get-info ( allergy_info ) ) RC : And what should you do if you have an allergy ? # request ( allergy_info ) @ G ( RC , get-info ( allergy_info ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : If you are ill , if you ca n't eat ...", "tgt": "RC : Are there no stairs to get to the next floor ? # request ( location ( stairs ) ) @ G ( RC , go-to ( stairs ) ) ARI : Yes , of course . # affirm ( ) @ AG ( LP , go-to ( stairs ) ) ; AG ( RC , go-to ( stairs ) ) RC : And where are they ? # request ( location ( stairs ) ) @ G ( RC , go-to ( stairs ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Where should I go for information ? # request ( location ( reception ) ) @ G ( RC , go-to ( reception ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : What should we do ? # request ( help ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : And how can it help us ? # request ( help ) RC : So this ... # incomplete-da ( ) RC : What can you tell us ? # request ( ari ( wcud ) ) @ G ( RC , get-info ( ari ( wcud ) ) ) RC : How many floors does the hospital have ? # request ( clinic ( num_floors ) ) @ G ( RC , get-info ( clinic ( num_floors ) ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : But I 'm thirsty . I need water . # request ( beverage ( water ) ) @ G ( LP , drink ( water ) ) RC : But we are thirsty , we need water . # request ( beverage ( water ) ) @ G ( LP+RC , drink ( water ) ) ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( beverage ( water ) ) @ AG ( LP+RC , drink ( water ) RC : And is there water in the cafeteria ? # request ( beverage ( water ) ) @ G ( RC , drink ( water ) ) ARI : Of course . # affirm ( ) @ AG ( RC , drink ( water ) ) LP : Is there coffee too ? # request ( beverage ( coffee ) ) @ G ( LP , drink ( coffee ) ) RC : And coffee ? Is there coffee ? # request ( beverage ( coffee ) ) @ G ( RC , drink ( coffee ) ) ARI : Absolutely . # affirm ( ) @ AG ( LP , drink ( coffee ) ) ; AG ( RC , drink ( coffee ) )"}
{"src": "ARI : Hello , my name is ARI . Can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) RC : Hello ARI , actually , it 's midday and I 'd like to go to the restaurant , what time does it open ? # greet ( ) ; request ( location ( cafe ) ) ; request ( cafe ( opening_times ( opening_time ) ) ) @ G ( RC , go-to ( cafe ) ) ; G ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) ) ARI : At 11 AM . # inform ( cafe ( opening_times ( opening_time ) ) ) @ AG ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) ) [start] RC : 11 AM , thank you . And , where is it ? Where should I go ? Is it upstairs or on the ground floor ? # thank ( ) ; request ( location ( cafe ) ) [MASK] ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) [MASK] RC : Thank you ARI . # thank ( ) [MASK] ARI : You 're welcome . # youre-welcome ( ) ARI : How can I help you ? # offer-help ( ) LP : Where can we eat at lunchtime ? # request ( food ) [MASK] ARI : There 's a cafeteria on the ground floor , near the courtyard . You can order hot or cold sandwiches as well as hot or cold drinks . # inform ( food ) [MASK] LP : It 's ... yes , yes . I did n't quite understand . # r-repet ( inform ( food ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . You can order hot or cold sandwiches as well as hot or cold drinks . # p-repet ( inform ( food ) ) [MASK] LP : Where are the toilets ? # request ( location ( toilet ) ) [MASK] ARI : Very easy ! You have to go to the corridor at the end of the room . # inform ( location ( toilet ) ) [MASK] LP : Right or left ? ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : I 'm in a wheelchair , are the toilets wheelchair accessible ? # request ( toilet ( is_accessible ) ) [MASK] [end] ARI : Yes , absolutely . # affirm ( ) @ AG ( RC , get-info ( toilet ( is_accessible ) ) ) RC : Thank you . # thank ( ) @ CG ( RC , get-info ( toilet ( is_accessible ) ) )", "tgt": "RC : 11 AM , thank you . And , where is it ? Where should I go ? Is it upstairs or on the ground floor ? # thank ( ) ; request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) @ AG ( RC , go-to ( cafe ) ) RC : Thank you ARI . # thank ( ) @ CG ( RC , go-to ( cafe ) ) ARI : You 're welcome . # youre-welcome ( ) ARI : How can I help you ? # offer-help ( ) LP : Where can we eat at lunchtime ? # request ( food ) @ G ( LP+RC , eat ( ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . You can order hot or cold sandwiches as well as hot or cold drinks . # inform ( food ) @ AG ( LP+RC , eat ( ) ) LP : It 's ... yes , yes . I did n't quite understand . # r-repet ( inform ( food ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . You can order hot or cold sandwiches as well as hot or cold drinks . # p-repet ( inform ( food ) ) @ AG ( LP+RC , eat ( ) ) LP : Where are the toilets ? # request ( location ( toilet ) ) @ G ( LP , go-to ( toilet ) ) ARI : Very easy ! You have to go to the corridor at the end of the room . # inform ( location ( toilet ) ) @ AG ( LP , go-to ( toilet ) ) LP : Right or left ? ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : I 'm in a wheelchair , are the toilets wheelchair accessible ? # request ( toilet ( is_accessible ) ) @ G ( RC , get-info ( toilet ( is_accessible ) ) )"}
{"src": "ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) [start] LC : What time is it , please ? # request ( time ) [MASK] ARI : I 'm sorry , I do n't know the answer . # cant-help ( ) LC : Yeah , well it 's not much . # acknowledge ( ) RP : Is there a reception for people who have an appointment like me ? # request ( location ( reception ) ) [MASK] ARI : Yes , of course . The reception is just behind me . Remember to take a ticket on your right . # affirm ( ) ; inform ( location ( reception ) ) [MASK] RP : Thank you . # thank ( ) [MASK] LC : Can we have a coffee ? # request ( beverage ( coffee ) ) [MASK] ARI : You 're welcome . # youre-welcome ( ) LC : Can we have a coffee while we wait ? # request ( beverage ( coffee ) ) [MASK] ARI : Yes . There 's a cafeteria on the ground floor , near the courtyard . # affirm ( ) ; inform ( beverage ( coffee ) ) [MASK] RP : Do you know the price of a coffee ? # request ( beverage ( coffee ( cost ) ) ) [MASK] ARI : No . Sorry , I do n't have this information . # disaffirm ( ) ; cant-help ( ) LC : Is the coffee from a vending machine or a cafeteria ? [end] ARI : I 'm afraid I ca n't help you . # cant-help ( ) LC : Go ahead . ARI : Can I help you ? # offer-help ( ) RP : I can ask ... # incomplete-da ( ) RP : Is the cafeteria open at this time ? It 's 6 PM , is the cafeteria still open ? # request ( cafe ( opening_times ( ) ) @ G ( RP , get-info ( cafe ( opening_times ) ) ) ARI : No . The cafeteria is open from 11 AM to 3 PM . # disaffirm ( ) ; inform ( cafe ( opening_times ) ) @ AG ( RP , get-info ( cafe ( opening_times ) ) )", "tgt": "LC : What time is it , please ? # request ( time ) @ G ( LC , get-info ( time ) ) ARI : I 'm sorry , I do n't know the answer . # cant-help ( ) LC : Yeah , well it 's not much . # acknowledge ( ) RP : Is there a reception for people who have an appointment like me ? # request ( location ( reception ) ) @ G ( RP , go-to ( reception ) ) ARI : Yes , of course . The reception is just behind me . Remember to take a ticket on your right . # affirm ( ) ; inform ( location ( reception ) ) @ AG ( RP , go-to ( reception ) ) RP : Thank you . # thank ( ) @ CG ( RP , go-to ( reception ) ) LC : Can we have a coffee ? # request ( beverage ( coffee ) ) @ G ( LC+RP , drink ( coffee ) ) ARI : You 're welcome . # youre-welcome ( ) LC : Can we have a coffee while we wait ? # request ( beverage ( coffee ) ) @ G ( LC+RP , drink ( coffee ) ) ARI : Yes . There 's a cafeteria on the ground floor , near the courtyard . # affirm ( ) ; inform ( beverage ( coffee ) ) @ AG ( LC+RP , drink ( coffee ) ) RP : Do you know the price of a coffee ? # request ( beverage ( coffee ( cost ) ) ) @ G ( RP , get-info ( beverage ( coffee ( cost ) ) ) ) ARI : No . Sorry , I do n't have this information . # disaffirm ( ) ; cant-help ( ) LC : Is the coffee from a vending machine or a cafeteria ?"}
{"src": "LP : Hello ARI . # greet ( ) ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) LP : Ask how ... # incomplete-da ( ) RC : Hello . I 'd like to have a small meal , can you tell me where we should go ? # greet ( ) ; request ( food ) @ G ( RC , eat ( ) ) ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( food ) @ AG ( RC , eat ( ) ) RC : Can you tell me when the cafeteria opens ? # request ( cafe ( opening_times ( opening_time ) ) ) @ G ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) [start] ARI : From 11 AM to 4 PM . # inform ( cafe ( opening_times ) ) [MASK] RC : From 11 AM to 4 PM , is that right ? # r-confirm ( cafe ( opening_times ) ) [MASK] ARI : Yes , you 're right . # p-confirm ( cafe ( opening_times ) ) [MASK] RC : Thank you . # thank ( ) [MASK] ARI : You 're welcome , I 'm here to answer your questions . # offer-help ( ) RC : Is the cafeteria wheelchair accessible ? Because my friend is in a wheelchair and he ca n't get around by himself . # request ( cafe ( accessible ) ) [MASK] ARI : Yes , absolutely . # affirm ( ) [MASK] RC : Thank you . # thank ( ) [MASK] LP : Hmm , ARI , could you tell me how to get to the cafeteria ? # request ( directions ( cafe ) ) [MASK] ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) [MASK] RC : ARI , could you tell me if my appointment is at 11 AM ? # request ( appt ( time ) ) [MASK] ARI : Sorry , I do n't have this information . You have to go to the reception . LP : He might know how to get there . LP : Can you tell me how to get to the reception ? # request ( directions ( reception ) ) [MASK] ARI : The reception is just behind me . Remember to take a ticket on your right . # inform ( location ( reception ) ) [MASK] RC : Ah , thank you . # thank ( ) [MASK] LP : It 's quite simple . Thank you ARI . # thank ( ) ARI : You 're welcome . I 'm here to answer your questions . # offer-help ( ) [end] LP : It would be nice if we knew how to take the lift . LP : ARI , could you tell us how to get to the lift ? # request ( directions ( lifts ) ) @ G ( LP+RC , go-to ( lifts ) ) ARI : The lifts are at the entrance on the left . # inform ( location ( lifts ) ) @ AG ( LP+RC , go-to ( lifts ) ) LP : Do these lifts take us to the cafeteria , or do we have to take something else ? ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) RC : Is the cafeteria on the ground floor ? # request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : Yes , you 're right . # affirm ( ) RC : So we do n't have to take the lift to get to the cafeteria ? ARI : No , you do not . # disaffirm ( ) RC : Thank you . # thank ( ) LP : Thank you very much ARI . # thank ( ) ARI : You 're welcome , thank you , see you later and have a nice day . # thank ( ) ; bye ( )", "tgt": "ARI : From 11 AM to 4 PM . # inform ( cafe ( opening_times ) ) @ AG ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) RC : From 11 AM to 4 PM , is that right ? # r-confirm ( cafe ( opening_times ) ) @ G ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) ARI : Yes , you 're right . # p-confirm ( cafe ( opening_times ) ) @ AG ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) RC : Thank you . # thank ( ) @ CG ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) ARI : You 're welcome , I 'm here to answer your questions . # offer-help ( ) RC : Is the cafeteria wheelchair accessible ? Because my friend is in a wheelchair and he ca n't get around by himself . # request ( cafe ( accessible ) ) @ G ( RC , get-info ( cafe ( accessible ) ) ) ARI : Yes , absolutely . # affirm ( ) @ AG ( RC , get-info ( cafe ( accessible ) ) ) RC : Thank you . # thank ( ) @ CG ( RC , get-info ( cafe ( accessible ) ) ) LP : Hmm , ARI , could you tell me how to get to the cafeteria ? # request ( directions ( cafe ) ) @ G ( LP , go-to ( cafe ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) @ AG ( LP , go-to ( cafe ) ) RC : ARI , could you tell me if my appointment is at 11 AM ? # request ( appt ( time ) ) @ G ( RC , get-info ( appt ( time ) ) ) ARI : Sorry , I do n't have this information . You have to go to the reception . LP : He might know how to get there . LP : Can you tell me how to get to the reception ? # request ( directions ( reception ) ) @ G ( LP , go-to ( reception ) ) ARI : The reception is just behind me . Remember to take a ticket on your right . # inform ( location ( reception ) ) @ AG ( LP , go-to ( reception ) ) RC : Ah , thank you . # thank ( ) @ CG ( LP , go-to ( reception ) ) LP : It 's quite simple . Thank you ARI . # thank ( ) ARI : You 're welcome . I 'm here to answer your questions . # offer-help ( )"}
{"src": "ARI : Hello . My name is ARI . Can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) RC : Yes , I do . I have to go and see someone who 's hospitalised and I ca n't remember the ward . It 's room 17 . Can you please tell me where it is ? # request ( location ( room_17 ) ) @ G ( RC , go-to ( room_17 ) ) [start] ARI : You continue along the building , take the lift , and it 's on the second floor . # inform ( directions ( room_17 ) ) [MASK] RC : Ok , thank you . # acknowledge ( ) ; thank ( ) [MASK] ARI : Thank you . # thank ( ) LP : Look , I have an appointment , but um , for my friend who is here . I ca n't remember the appointment time . Could you tell me ? # request ( appt ( time ) ) [MASK] ARI : Sorry , I do n't have this information . You have to go to the reception . # cant-help ( ) ; suggest ( going-to ( reception ) ) LP : Ok , thank you . Where is the reception ? # acknowledge ( ) ; thank ( ) ; request ( location ( reception ) ) [MASK] ARI : You have to enter the second building behind you . Then it 's the second door on the left . # inform ( directions ( reception ) ) [MASK] LP : Ok , thank you . # acknowledge ( ) ; thank ( ) [MASK] RC : I have an appointment at 5 o'clock in the cardiology department . I do n't know where that is . Could you tell me please ? # request ( location ( cardiology_department ) ) [MASK] [end] ARI : Sorry , I do n't have this information . I 'll call a nurse to come and help you . # cant-help ( ) ; call-nurse ( ) ARI : Thank you . See you soon . Have a nice day . # thank ( ) ; bye ( ) RC : Thank you , bye . # thank ( ) ; bye ( ) LP : See you soon . You too , have a nice day . # bye ( )", "tgt": "ARI : You continue along the building , take the lift , and it 's on the second floor . # inform ( directions ( room_17 ) ) @ AG ( RC , go-to ( room_17 ) ) RC : Ok , thank you . # acknowledge ( ) ; thank ( ) @ CG ( RC , go-to ( room_17 ) ) ARI : Thank you . # thank ( ) LP : Look , I have an appointment , but um , for my friend who is here . I ca n't remember the appointment time . Could you tell me ? # request ( appt ( time ) ) @ G ( LP , get-info ( appt ( time ) ) ) ARI : Sorry , I do n't have this information . You have to go to the reception . # cant-help ( ) ; suggest ( going-to ( reception ) ) LP : Ok , thank you . Where is the reception ? # acknowledge ( ) ; thank ( ) ; request ( location ( reception ) ) @ G ( LP , go-to ( reception ) ) ARI : You have to enter the second building behind you . Then it 's the second door on the left . # inform ( directions ( reception ) ) @ AG ( LP , go-to ( reception ) ) LP : Ok , thank you . # acknowledge ( ) ; thank ( ) @ CG ( LP , go-to ( reception ) ) RC : I have an appointment at 5 o'clock in the cardiology department . I do n't know where that is . Could you tell me please ? # request ( location ( cardiology_department ) ) @ G ( RC , go-to ( cardiology_department ) )"}
{"src": "[start] ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) RP : Yes , I do . I 'd like to know where the cafeteria is , um or , I do n't know , a restaurant here in the hospital ? # request ( location ( cafe ) ) [MASK] ARI : You have to enter the second building behind you . Then it 's the second door on the left . # inform ( directions ( cafe ) ) [MASK] LC : Um , can you repeat that please ? # r-repet ( directions ( cafe ) ) ) ARI : You have to enter the second building behind you . Then it 's the second door on the left . # p-repet ( directions ( cafe ) ) RP : I 'm hard of hearing and the sound is a little low , can you repeat that please ? # r-repet ( directions ( cafe ) ) ) ARI : You have to enter the second building behind you . Then it 's the second door on the left . # p-repet ( directions ( cafe ) ) [end] RP : Ok , thank you . # acknowledge ( ) ; thank ( ) @ CG ( RP , go-to ( cafe ) ) RP : So , another question ... LC : Um , hello . Do you know where the toilets are ? # greet ( ) ; request ( location ( toilet ) ) @ G ( LC , go-to ( toilet ) ) ARI : Very easy ! You have to go to the corridor at the end of the room . It 's the second door on the right . # inform ( directions ( toilet ) ) @ AG ( LC , go-to ( toilet ) ) LC : Thank you . # thank ( ) @ CG ( LC , go-to ( toilet ) )", "tgt": "ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) RP : Yes , I do . I 'd like to know where the cafeteria is , um or , I do n't know , a restaurant here in the hospital ? # request ( location ( cafe ) ) @ G ( RP , go-to ( cafe ) ) ARI : You have to enter the second building behind you . Then it 's the second door on the left . # inform ( directions ( cafe ) ) @ AG ( RP , go-to ( cafe ) ) LC : Um , can you repeat that please ? # r-repet ( directions ( cafe ) ) ) ARI : You have to enter the second building behind you . Then it 's the second door on the left . # p-repet ( directions ( cafe ) ) RP : I 'm hard of hearing and the sound is a little low , can you repeat that please ? # r-repet ( directions ( cafe ) ) ) ARI : You have to enter the second building behind you . Then it 's the second door on the left . # p-repet ( directions ( cafe ) )"}
{"src": "LC : I 'd prefer a hot chocolate . # request ( beverage ( hot_chocolate ) ) @ G ( LC , drink ( hot_chocolate ) ) RP : And why not herbal tea ? # suggest ( requesting ( beverage ( herbal_tea ) ) ) @ G ( RP , drink ( herbal_tea ) ) [start] LC : Well , yes . # accept-sugg ( requesting ( beverage ( herbal_tea ) ) ) [MASK] RP : To de-stress . # suggest ( requesting ( beverage ( herbal_tea ) ) ) [MASK] RP : Could we have a hot drink to relax a bit ? We 're a little bit annoyed , stressed out from all of this . The hospital is complicated , is n't it ? # request ( beverage ( hot_drink ) ) [MASK] ARI : Yes , there 's a cafeteria on the ground floor , near the courtyard . You can order hot or cold sandwiches as well as hot or cold drinks . # affirm ( ) ; inform ( location ( cafe ) ) , inform ( beverage ( hot_drink ) ) [MASK] RP : Well , great , thank you . # thank ( ) [MASK] LC : I see a sign , but I do n't know what it means . RP : Ah . LC : Is it a round trip ? RP : Ah , ah , yes . RP : How do we get to the ground floor , do we take the lift ? How do we do it ? # request ( directions ( ground_floor ) ) [MASK] ARI : Yes , the lifts are at the entrance on the left . # affirm ( ) ; inform ( directions ( ground_floor ) ) [end] RP : Ah great , thank you . # thank ( ) @ CG ( LC+RP , go_to ( ground_floor ) ) RP : Goodbye . # bye ( ) ARI : You 're welcome . RP : We do n't need you anymore , goodbye . # bye ( ) ARI : Thank you , see you later , have a nice day . # bye ( ) RP : Great , well , we 're done .", "tgt": "LC : Well , yes . # accept-sugg ( requesting ( beverage ( herbal_tea ) ) ) @ G ( LC , drink ( herbal_tea ) ) RP : To de-stress . # suggest ( requesting ( beverage ( herbal_tea ) ) ) @ G ( RP , drink ( herbal_tea ) ) RP : Could we have a hot drink to relax a bit ? We 're a little bit annoyed , stressed out from all of this . The hospital is complicated , is n't it ? # request ( beverage ( hot_drink ) ) @ G ( LC+RP , drink ( hot_drink ) ) ARI : Yes , there 's a cafeteria on the ground floor , near the courtyard . You can order hot or cold sandwiches as well as hot or cold drinks . # affirm ( ) ; inform ( location ( cafe ) ) , inform ( beverage ( hot_drink ) ) @ AG ( LC+RP , drink ( hot_drink ) ) RP : Well , great , thank you . # thank ( ) @ CG ( LC+RP , drink ( hot_drink ) ) LC : I see a sign , but I do n't know what it means . RP : Ah . LC : Is it a round trip ? RP : Ah , ah , yes . RP : How do we get to the ground floor , do we take the lift ? How do we do it ? # request ( directions ( ground_floor ) ) @ G ( LC+RP , go_to ( ground_floor ) ) ARI : Yes , the lifts are at the entrance on the left . # affirm ( ) ; inform ( directions ( ground_floor ) )"}
{"src": "ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) LP : Where can we eat ? # request ( location ( cafe ) ) @ G ( LP+RC , eat ( ) ) RC : ARI , the person that I 'm accompanying feels intimidated by by you , and and they 'd like to know where they can eat . # request ( location ( cafe ) ) @ G ( LP , eat ( ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) @ AG ( LP+RC , eat ( ) ) ; G ( LP , eat ( ) ) LP : Are there toilets ? And where are they ? # request ( location ( toilet ) ) @ G ( LP , go-to ( toilet ) ) [start] RC : I 'm asking on behalf of the person that I 'm accompanying , who is asking me , well , where are the toilets ? # request ( location ( toilet ) ) [MASK] ARI : Very easy ! You have to go to the corridor at the end of the room . # inform ( location ( toilet ) ) [MASK] LP : Are they accessible by disabled people ? # request ( toilet ( accessible ) ) [MASK] RC : My ... My friend does n't walk very well , can he get into the toilets with his ... # request ( toilet ( accessible ) ) [MASK] LP : Wheelchair . RC : his wheelchair ? # request ( toilet ( accessible ) ) [MASK] ARI : Yes , absolutely . # affirm ( ) [MASK] LP : I have an appointment in room 17 , where is it ? # request ( location ( room_17 ) ) [MASK] RC : And he 's a bit lost , he has an appointment , he 's been asked to go to , to go to room 17 . Could you tell us where to go , please ? # request ( location ( room_17 ) ) [MASK] ARI : The examination room is on the second floor . You just have to go to the counter on the left and then a nurse will come and take care of you . The lifts are at the entrance on the left . # inform ( location ( room_17 ) ) [MASK] LP : Is it wheelchair accessible ? # request ( is_accessible ( lift ) ) [MASK] RC : Is the lift wheelchair accessible ? Can he use the lift ? # request ( is_accessible ( lift ) ) [MASK] ARI : Yes , you 're right . # affirm ( ) [MASK] LP : I have an appointment at 10 AM , how long ... ah well yes ... # incomplete-da ( ) [end] RC : He has an appointment at 10 o'clock . Do you know if there is a waiting time , if he has time for a coffee or do we have to go straight to the treatment room ? # request ( clinic ( busyness ) ) @ G ( LP+RC , get-info ( clinic ( busyness ) ) ) ARI : No , there are n't too many people . The doctor will take you on time . # disaffirm ( ) ; inform ( clinic ( busyness ) ) @ AG ( LP+RC , get-info ( clinic ( busyness ) ) ) LP : I do n't know ... # incomplete-da ( ) ARI : Thank you , see you around , have a nice day . # thank ( ) ; bye ( )", "tgt": "RC : I 'm asking on behalf of the person that I 'm accompanying , who is asking me , well , where are the toilets ? # request ( location ( toilet ) ) @ G ( LP , go-to ( toilet ) ) ARI : Very easy ! You have to go to the corridor at the end of the room . # inform ( location ( toilet ) ) @ AG ( LP , go-to ( toilet ) ) LP : Are they accessible by disabled people ? # request ( toilet ( accessible ) ) @ G ( LP , get-info ( toilet ( accessible ) ) ) RC : My ... My friend does n't walk very well , can he get into the toilets with his ... # request ( toilet ( accessible ) ) @ G ( LP , get-info ( toilet ( accessible ) ) ) LP : Wheelchair . RC : his wheelchair ? # request ( toilet ( accessible ) ) @ G ( LP , get-info ( toilet ( accessible ) ) ) ARI : Yes , absolutely . # affirm ( ) @ AG ( LP , get-info ( toilet ( accessible ) ) ) LP : I have an appointment in room 17 , where is it ? # request ( location ( room_17 ) ) @ G ( LP , go-to ( room_17 ) ) RC : And he 's a bit lost , he has an appointment , he 's been asked to go to , to go to room 17 . Could you tell us where to go , please ? # request ( location ( room_17 ) ) @ G ( LP , go-to ( room_17 ) ) ARI : The examination room is on the second floor . You just have to go to the counter on the left and then a nurse will come and take care of you . The lifts are at the entrance on the left . # inform ( location ( room_17 ) ) @ AG ( LP , go-to ( room_17 ) ) LP : Is it wheelchair accessible ? # request ( is_accessible ( lift ) ) @ G ( LP , get-info ( is_accessible ( lift ) ) ) RC : Is the lift wheelchair accessible ? Can he use the lift ? # request ( is_accessible ( lift ) ) @ G ( LP+RC , get-info ( is_accessible ( lift ) ) ) ARI : Yes , you 're right . # affirm ( ) @ AG ( LP+RC , get-info ( is_accessible ( lift ) ) ) LP : I have an appointment at 10 AM , how long ... ah well yes ... # incomplete-da ( )"}
{"src": "ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) LC : I 'm hungry . # request ( food ) @ G ( LC , eat ( ) ) LC : I 'm hungry . # request ( food ) @ G ( LC , eat ( ) ) [start] RP : I 'm hungry . # request ( food ) [MASK] LC : I 'd like to eat . # request ( food ) [MASK] ARI : It 's the most important question of the day . Are you hungry yet ? # inform ( food ) [MASK] RP : Yes . # affirm ( ) [MASK] ARI : You can ask my colleague in the room who is responsible for the meals . # inform ( food ) [MASK] LC : I 'd like to go to the toilet before the consultation . # request ( location ( toilet ) ) [MASK] [end] ARI : Very easy ! You have to go to the corridor at the end of the room . It 's the second door on the right . # inform ( directions ( toilet ) ) @ AG ( LC , go-to ( toilet ) )", "tgt": "RP : I 'm hungry . # request ( food ) @ G ( RP , eat ( ) ) LC : I 'd like to eat . # request ( food ) @ G ( LC , eat ( ) ) ARI : It 's the most important question of the day . Are you hungry yet ? # inform ( food ) @ AG ( LC , eat ( ) ) ; AG ( RP , eat ( ) ) RP : Yes . # affirm ( ) @ G ( RP , eat ( ) ) ARI : You can ask my colleague in the room who is responsible for the meals . # inform ( food ) @ AG ( LC , eat ( ) ) ; AG ( RP , eat ( ) ) LC : I 'd like to go to the toilet before the consultation . # request ( location ( toilet ) ) @ G ( LC , go-to ( toilet ) )"}
{"src": "ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) [start] RP : Hello ARI , we have to find a lift to get to the next floor . Where is the lift in this building ? # greet ( ) ; request ( location ( lift ) ) [MASK] ARI : The lifts are at the entrance on the left . # inform ( location ( lift ) ) [MASK] RP : Ok , and we have time to have a coffee before going upstairs , is that right ? # acknowledge ( ) ; request ( beverage ( coffee ) ) [MASK] [end] ARI : Yes , absolutely . # affirm ( ) RP : Wait , so we 'll go to the cafeteria before taking the lift .", "tgt": "RP : Hello ARI , we have to find a lift to get to the next floor . Where is the lift in this building ? # greet ( ) ; request ( location ( lift ) ) @ G ( LC+RP , go-to ( lift ) ) ARI : The lifts are at the entrance on the left . # inform ( location ( lift ) ) @ AG ( LC+RP , go-to ( lift ) ) RP : Ok , and we have time to have a coffee before going upstairs , is that right ? # acknowledge ( ) ; request ( beverage ( coffee ) ) @ G ( LP+RC , drink ( coffee ) )"}
