{"src": "ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) [start] LC : What time is it , please ? # request ( time ) [MASK] ARI : I 'm sorry , I do n't know the answer . # cant-help ( ) LC : Yeah , well it 's not much . # acknowledge ( ) RP : Is there a reception for people who have an appointment like me ? # request ( location ( reception ) ) [MASK] ARI : Yes , of course . The reception is just behind me . Remember to take a ticket on your right . # affirm ( ) ; inform ( location ( reception ) ) [MASK] RP : Thank you . # thank ( ) [MASK] LC : Can we have a coffee ? # request ( beverage ( coffee ) ) [MASK] ARI : You 're welcome . # youre-welcome ( ) LC : Can we have a coffee while we wait ? # request ( beverage ( coffee ) ) [MASK] ARI : Yes . There 's a cafeteria on the ground floor , near the courtyard . # affirm ( ) ; inform ( beverage ( coffee ) ) [MASK] RP : Do you know the price of a coffee ? # request ( beverage ( coffee ( cost ) ) ) [MASK] ARI : No . Sorry , I do n't have this information . # disaffirm ( ) ; cant-help ( ) LC : Is the coffee from a vending machine or a cafeteria ? [end] ARI : I 'm afraid I ca n't help you . # cant-help ( ) LC : Go ahead . ARI : Can I help you ? # offer-help ( ) RP : I can ask ... # incomplete-da ( ) RP : Is the cafeteria open at this time ? It 's 6 PM , is the cafeteria still open ? # request ( cafe ( opening_times ( ) ) @ G ( RP , get-info ( cafe ( opening_times ) ) ) ARI : No . The cafeteria is open from 11 AM to 3 PM . # disaffirm ( ) ; inform ( cafe ( opening_times ) ) @ AG ( RP , get-info ( cafe ( opening_times ) ) )", "tgt": "LC : What time is it , please ? # request ( time ) @ G ( LC , get-info ( time ) ) ARI : I 'm sorry , I do n't know the answer . # cant-help ( ) LC : Yeah , well it 's not much . # acknowledge ( ) RP : Is there a reception for people who have an appointment like me ? # request ( location ( reception ) ) @ G ( RP , go-to ( reception ) ) ARI : Yes , of course . The reception is just behind me . Remember to take a ticket on your right . # affirm ( ) ; inform ( location ( reception ) ) @ AG ( RP , go-to ( reception ) ) RP : Thank you . # thank ( ) @ CG ( RP , go-to ( reception ) ) LC : Can we have a coffee ? # request ( beverage ( coffee ) ) @ G ( LC+RP , drink ( coffee ) ) ARI : You 're welcome . # youre-welcome ( ) LC : Can we have a coffee while we wait ? # request ( beverage ( coffee ) ) @ G ( LC+RP , drink ( coffee ) ) ARI : Yes . There 's a cafeteria on the ground floor , near the courtyard . # affirm ( ) ; inform ( beverage ( coffee ) ) @ AG ( LC+RP , drink ( coffee ) ) RP : Do you know the price of a coffee ? # request ( beverage ( coffee ( cost ) ) ) @ G ( RP , get-info ( beverage ( coffee ( cost ) ) ) ) ARI : No . Sorry , I do n't have this information . # disaffirm ( ) ; cant-help ( ) LC : Is the coffee from a vending machine or a cafeteria ?"}
{"src": "ARI : Hello , I 'm ARI the robot . Can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) RC : So it 's ... # incomplete-da ( ) LP : Yes . So um ... So um ... # incomplete-da ( ) RC : Yes ? [start] RC : I 'd like to know how to get to the lift . # request ( directions ( lifts ) ) [MASK] ARI : Of course . The lifts are at the entrance on the left . # inform ( location ( lifts ) ) [MASK] LP : It 's nice of you to answer us . # give-feedback ( positive ) RC : Thank you very much . # thank ( ) [MASK] LP : Thanks ARI . # thank ( ) LP : Maybe we could ask him if there 's anything to eat ? # suggest ( requesting ( food ) ) [MASK] RC : Yes , yes . # accept-sugg ( requesting ( food ) ) [MASK] RC : And also , could you show us to the cafeteria ? If there is one in the hospital . # request ( directions ( cafe ) ) [MASK] ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) [MASK] LP : How do we get there ARI ? # request ( directions ( cafe ) ) [MASK] ARI : Sorry , I do n't have this information . # cant-help ( ) LP : Do we have to take the lift ? # request ( directions ( cafe ) ) ARI : Yes . # affirm ( ) RC : So you do n't know how to get to the cafeteria ? Because yesterday ... # request ( directions ( cafe ) ) [MASK] [end] ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) @ AG ( RC , go-to ( cafe ) ) LP : So it 's on the ground floor . RC : Yes , that 's it . # affirm ( ) ARI : Yes , absolutely . # affirm ( ) RC : Can you take us there by any chance ? ARI : I 'm sorry , I ca n't give you that information . I 'll call a nurse to come and help you . # cant-help ( ) ; call-nurse ( ) RC : Thank you very much . # thank ( ) LP : Thank you ARI . # thank ( )", "tgt": "RC : I 'd like to know how to get to the lift . # request ( directions ( lifts ) ) @ G ( RC , go-to ( lifts ) ) ARI : Of course . The lifts are at the entrance on the left . # inform ( location ( lifts ) ) @ AG ( RC , go-to ( lifts ) ) LP : It 's nice of you to answer us . # give-feedback ( positive ) RC : Thank you very much . # thank ( ) @ CG ( RC , go-to ( lifts ) ) LP : Thanks ARI . # thank ( ) LP : Maybe we could ask him if there 's anything to eat ? # suggest ( requesting ( food ) ) @ G ( LP , eat ( ) ) RC : Yes , yes . # accept-sugg ( requesting ( food ) ) @ G ( LP+RC , eat ( ) ) RC : And also , could you show us to the cafeteria ? If there is one in the hospital . # request ( directions ( cafe ) ) @ G ( LP+RC , go-to ( cafe ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) @ AG ( LP+RC , eat ( ) ) ; AG ( LP+RC , go-to ( cafe ) ) LP : How do we get there ARI ? # request ( directions ( cafe ) ) @ G ( LP+RC , go-to ( cafe ) ) ARI : Sorry , I do n't have this information . # cant-help ( ) LP : Do we have to take the lift ? # request ( directions ( cafe ) ) ARI : Yes . # affirm ( ) RC : So you do n't know how to get to the cafeteria ? Because yesterday ... # request ( directions ( cafe ) ) @ G ( RC , go-to ( cafe ) )"}
{"src": "ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) LP : Where can we eat ? # request ( location ( cafe ) ) @ G ( LP+RC , eat ( ) ) RC : ARI , the person that I 'm accompanying feels intimidated by by you , and and they 'd like to know where they can eat . # request ( location ( cafe ) ) @ G ( LP , eat ( ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) @ AG ( LP+RC , eat ( ) ) ; G ( LP , eat ( ) ) LP : Are there toilets ? And where are they ? # request ( location ( toilet ) ) @ G ( LP , go-to ( toilet ) ) [start] RC : I 'm asking on behalf of the person that I 'm accompanying , who is asking me , well , where are the toilets ? # request ( location ( toilet ) ) [MASK] ARI : Very easy ! You have to go to the corridor at the end of the room . # inform ( location ( toilet ) ) [MASK] LP : Are they accessible by disabled people ? # request ( toilet ( accessible ) ) [MASK] RC : My ... My friend does n't walk very well , can he get into the toilets with his ... # request ( toilet ( accessible ) ) [MASK] LP : Wheelchair . RC : his wheelchair ? # request ( toilet ( accessible ) ) [MASK] ARI : Yes , absolutely . # affirm ( ) [MASK] LP : I have an appointment in room 17 , where is it ? # request ( location ( room_17 ) ) [MASK] RC : And he 's a bit lost , he has an appointment , he 's been asked to go to , to go to room 17 . Could you tell us where to go , please ? # request ( location ( room_17 ) ) [MASK] ARI : The examination room is on the second floor . You just have to go to the counter on the left and then a nurse will come and take care of you . The lifts are at the entrance on the left . # inform ( location ( room_17 ) ) [MASK] LP : Is it wheelchair accessible ? # request ( is_accessible ( lift ) ) [MASK] RC : Is the lift wheelchair accessible ? Can he use the lift ? # request ( is_accessible ( lift ) ) [MASK] ARI : Yes , you 're right . # affirm ( ) [MASK] LP : I have an appointment at 10 AM , how long ... ah well yes ... # incomplete-da ( ) [end] RC : He has an appointment at 10 o'clock . Do you know if there is a waiting time , if he has time for a coffee or do we have to go straight to the treatment room ? # request ( clinic ( busyness ) ) @ G ( LP+RC , get-info ( clinic ( busyness ) ) ) ARI : No , there are n't too many people . The doctor will take you on time . # disaffirm ( ) ; inform ( clinic ( busyness ) ) @ AG ( LP+RC , get-info ( clinic ( busyness ) ) ) LP : I do n't know ... # incomplete-da ( ) ARI : Thank you , see you around , have a nice day . # thank ( ) ; bye ( )", "tgt": "RC : I 'm asking on behalf of the person that I 'm accompanying , who is asking me , well , where are the toilets ? # request ( location ( toilet ) ) @ G ( LP , go-to ( toilet ) ) ARI : Very easy ! You have to go to the corridor at the end of the room . # inform ( location ( toilet ) ) @ AG ( LP , go-to ( toilet ) ) LP : Are they accessible by disabled people ? # request ( toilet ( accessible ) ) @ G ( LP , get-info ( toilet ( accessible ) ) ) RC : My ... My friend does n't walk very well , can he get into the toilets with his ... # request ( toilet ( accessible ) ) @ G ( LP , get-info ( toilet ( accessible ) ) ) LP : Wheelchair . RC : his wheelchair ? # request ( toilet ( accessible ) ) @ G ( LP , get-info ( toilet ( accessible ) ) ) ARI : Yes , absolutely . # affirm ( ) @ AG ( LP , get-info ( toilet ( accessible ) ) ) LP : I have an appointment in room 17 , where is it ? # request ( location ( room_17 ) ) @ G ( LP , go-to ( room_17 ) ) RC : And he 's a bit lost , he has an appointment , he 's been asked to go to , to go to room 17 . Could you tell us where to go , please ? # request ( location ( room_17 ) ) @ G ( LP , go-to ( room_17 ) ) ARI : The examination room is on the second floor . You just have to go to the counter on the left and then a nurse will come and take care of you . The lifts are at the entrance on the left . # inform ( location ( room_17 ) ) @ AG ( LP , go-to ( room_17 ) ) LP : Is it wheelchair accessible ? # request ( is_accessible ( lift ) ) @ G ( LP , get-info ( is_accessible ( lift ) ) ) RC : Is the lift wheelchair accessible ? Can he use the lift ? # request ( is_accessible ( lift ) ) @ G ( LP+RC , get-info ( is_accessible ( lift ) ) ) ARI : Yes , you 're right . # affirm ( ) @ AG ( LP+RC , get-info ( is_accessible ( lift ) ) ) LP : I have an appointment at 10 AM , how long ... ah well yes ... # incomplete-da ( )"}
{"src": "[start] RP : We 'll walk slowly , it 's ok . LC : Yes . # affirm ( ) RP : Umm ... Where are the lifts ? # request ( location ( lifts ) ) [MASK] [end] ARI : The lifts are at the entrance on the left . # inform ( location ( lifts ) ) @ AG ( RP , go-to ( lifts ) ) RP : Ok. # acknowledge ( ) @ CG ( RP , go-to ( lifts ) ) RP : We 'll take the lift then , it 'll be easier .", "tgt": "RP : We 'll walk slowly , it 's ok . LC : Yes . # affirm ( ) RP : Umm ... Where are the lifts ? # request ( location ( lifts ) ) @ G ( RP , go-to ( lifts ) )"}
{"src": "LP : Well , yeah , but you do what you want . LP : What time is my appointment with the doctor ? # request ( appt ( time ) ) @ G ( LP , get-info ( appt ( time ) ) ) RC : I think it 's 10 o'clock . # inform ( appt ( time ) ) @ AG ( LP , get-info ( appt ( time ) ) ) RC : What time is the appointment ? # request ( appt ( time ) ) @ G ( RC , get-info ( appt ( time ) ) ) RC : I have an appointment with the doctor . # request ( appt ( general_info ) ) @ G ( RC , get-info ( appt ( general_info ) ) ) ARI : You 'll have several appointments with different health professionals , at least three . First , a nurse will ask you questions about your health and carry out an initial assessment of your current condition . Next , you will discuss your difficulties with a neuropsychologist who will suggest tests to assess your abilities as accurately as possible . Then , you will see a geriatrician who will summarise all this data and suggest different types of follow-up depending on your results . # inform ( appt ( general_info ) ) @ AG ( RC , get-info ( appt ( general_info ) ) ) LP : And who is my geriatrician ? ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) RC : That 's a shame . # give-feedback ( negative ) LP : And where is the consultation room to go see my doctor ? RC : Is it my turn ? ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Is it right or left ? LP : Is there a reception at the hospital ? # request ( location ( reception ) ) @ G ( LP , go-to ( reception ) ) RC : Yes , I think so . # affirm ( ) @ AG ( LP , go-to ( reception ) ) RC : Where is the reception ? # request ( location ( reception ) ) @ G ( RC , go-to ( reception ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) RC : Where do I go for information ? # request ( location ( reception ) ) @ G ( RC , go-to ( reception ) ) LP : I 'd like a coffee . # request ( beverage ( coffee ) ) @ G ( LP , drink ( coffee ) ) RC : Where is the cafeteria ? # request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( beverage ( coffee ) ) ; inform ( location ( cafe ) ) @ AG ( LP , drink ( coffee ) ) ; AG ( RC , go-to ( cafe ) ) LP : How do we get to the ground floor ? # request ( directions ( ground_floor ) ) @ G ( LP+RC , go-to ( ground_floor ) ) RC : How do we get to the ground floor ? # request ( directions ( ground_floor ) ) @ G ( LP+RC , go-to ( ground_floor ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Which floor is the cafeteria on ? # request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Where is the cafeteria ? # request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : How much time do we have for a coffee before the first consultation ? # request ( appt ( time ) ) @ G ( LP , get-info ( appt ( time ) ) ) ARI : You 'll have several appointments with different health professionals , at least three . First , a nurse will ask you questions about your health and carry out an initial assessment of your current condition . Next , you will discuss your difficulties with a neuropsychologist who will suggest tests to assess your abilities as accurately as possible . Then , you will see a geriatrician who will summarise all this data and suggest different types of follow-up depending on your results . # inform ( appt ( general_info ) ) @ AG ( LP , get-info ( appt ( time ) ) ) RC : Yes , but at what time ? # affirm ( ) ; request ( appt ( time ) ) @ G ( RC , get-info ( appt ( time ) ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) LP : I was told that there was a lift in the hospital to get to the next floor . Does he know where it is ? # request ( location ( lifts ) ) @ G ( LP , go-to ( lifts ) ) RC : Where is the lift to go up ? # request ( location ( lifts ) ) @ G ( RC , go-to ( lifts ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : Are there stairs ? # request ( location ( stairs ) ) @ G ( LP , go-to ( stairs ) ) RC : And the stairs ? # request ( location ( stairs ) ) @ G ( RC , go-to ( stairs ) ) [start] RC : Are there no stairs to get to the next floor ? # request ( location ( stairs ) ) [MASK] ARI : Yes , of course . # affirm ( ) [MASK] RC : And where are they ? # request ( location ( stairs ) ) [MASK] ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Where should I go for information ? # request ( location ( reception ) ) [MASK] ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : What should we do ? # request ( help ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : And how can it help us ? # request ( help ) RC : So this ... # incomplete-da ( ) RC : What can you tell us ? # request ( ari ( wcud ) ) [MASK] RC : How many floors does the hospital have ? # request ( clinic ( num_floors ) ) [MASK] ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : But I 'm thirsty . I need water . # request ( beverage ( water ) ) [MASK] RC : But we are thirsty , we need water . # request ( beverage ( water ) ) [MASK] ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( beverage ( water ) ) [MASK] RC : And is there water in the cafeteria ? # request ( beverage ( water ) ) [MASK] ARI : Of course . # affirm ( ) [MASK] LP : Is there coffee too ? # request ( beverage ( coffee ) ) [MASK] RC : And coffee ? Is there coffee ? # request ( beverage ( coffee ) ) [MASK] ARI : Absolutely . # affirm ( ) [MASK] [end] RC : And tea ? # request ( beverage ( tea ) ) @ G ( RC , drink ( tea ) ) ARI : Yes . # affirm ( ) @ AG ( RC , drink ( tea ) ) LP : What is there to eat ? # request ( food ( menu ) ) @ G ( LP , eat ( ) ) RC : What can we eat ? # request ( food ( menu ) ) @ G ( LP+RC , eat ( ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Are there no cakes ? # request ( food ( cake ) ) @ G ( RC , eat ( cake ) ) ARI : Yes . # affirm ( ) @ AG ( RC , eat ( cake ) ) RC : Oh . LP : Yes , there are cakes ? # r-confirm ( food ( cake ) ) @ G ( LP , eat ( cake ) ) RC : Yes , there are cakes . # p-confirm ( food ( cake ) ) @ AG ( LP , eat ( cake ) ) RC : What kind of cakes are there ? # request ( food ( cake ) ) @ G ( RC , eat ( cake ) ) ARI : Of course . # affirm ( ) @ AG ( LP , eat ( cake ) ) RC : Sugar cake ? Honey cake ? Are there honey cakes ? # request ( food ( cake ) ) @ G ( RC , eat ( cake ) ) ARI : Lunch will be offered at midday if you have afternoon appointments . A snack may be offered after your appointment with the nurse . # inform ( food ) @ AG ( RC , eat ( ) ) RC : Oh ! That 's nice . # give-feedback ( positive ) LP : What 's on the menu ? # request ( food ( menu ) ) @ G ( LP , eat ( ) ) RC : What 's on the menu ? # request ( food ( menu ) ) @ G ( RC , eat ( ) ) ARI : Lunch will be offered at midday if you have afternoon appointments . A snack may be offered after your appointment with the nurse . # inform ( food ) @ AG ( LP , eat ( ) ) ; AG ( RC , eat ( ) ) RC : Is there any ham ? # request ( food ( ham ) ) @ G ( RC , eat ( ham ) ) ARI : Yes . # affirm ( ) @ AG ( RC , eat ( ham ) ) LP : How do we inform them of any allergies ? # request ( allergy_info ) @ G ( LP , get-info ( allergy_info ) ) RC : And what should you do if you have an allergy ? # request ( allergy_info ) @ G ( RC , get-info ( allergy_info ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : If you are ill , if you ca n't eat ...", "tgt": "RC : Are there no stairs to get to the next floor ? # request ( location ( stairs ) ) @ G ( RC , go-to ( stairs ) ) ARI : Yes , of course . # affirm ( ) @ AG ( LP , go-to ( stairs ) ) ; AG ( RC , go-to ( stairs ) ) RC : And where are they ? # request ( location ( stairs ) ) @ G ( RC , go-to ( stairs ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Where should I go for information ? # request ( location ( reception ) ) @ G ( RC , go-to ( reception ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : What should we do ? # request ( help ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : And how can it help us ? # request ( help ) RC : So this ... # incomplete-da ( ) RC : What can you tell us ? # request ( ari ( wcud ) ) @ G ( RC , get-info ( ari ( wcud ) ) ) RC : How many floors does the hospital have ? # request ( clinic ( num_floors ) ) @ G ( RC , get-info ( clinic ( num_floors ) ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : But I 'm thirsty . I need water . # request ( beverage ( water ) ) @ G ( LP , drink ( water ) ) RC : But we are thirsty , we need water . # request ( beverage ( water ) ) @ G ( LP+RC , drink ( water ) ) ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( beverage ( water ) ) @ AG ( LP+RC , drink ( water ) RC : And is there water in the cafeteria ? # request ( beverage ( water ) ) @ G ( RC , drink ( water ) ) ARI : Of course . # affirm ( ) @ AG ( RC , drink ( water ) ) LP : Is there coffee too ? # request ( beverage ( coffee ) ) @ G ( LP , drink ( coffee ) ) RC : And coffee ? Is there coffee ? # request ( beverage ( coffee ) ) @ G ( RC , drink ( coffee ) ) ARI : Absolutely . # affirm ( ) @ AG ( LP , drink ( coffee ) ) ; AG ( RC , drink ( coffee ) )"}
