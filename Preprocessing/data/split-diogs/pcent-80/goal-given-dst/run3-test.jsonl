{"src": "LP : Hello ARI . # greet ( ) ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) LP : Ask how ... # incomplete-da ( ) RC : Hello . I 'd like to have a small meal , can you tell me where we should go ? # greet ( ) ; request ( food ) @ G ( RC , eat ( ) ) ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( food ) @ AG ( RC , eat ( ) ) RC : Can you tell me when the cafeteria opens ? # request ( cafe ( opening_times ( opening_time ) ) ) @ G ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) [start] ARI : From 11 AM to 4 PM . # inform ( cafe ( opening_times ) ) [MASK] RC : From 11 AM to 4 PM , is that right ? # r-confirm ( cafe ( opening_times ) ) [MASK] ARI : Yes , you 're right . # p-confirm ( cafe ( opening_times ) ) [MASK] RC : Thank you . # thank ( ) [MASK] ARI : You 're welcome , I 'm here to answer your questions . # offer-help ( ) RC : Is the cafeteria wheelchair accessible ? Because my friend is in a wheelchair and he ca n't get around by himself . # request ( cafe ( accessible ) ) [MASK] ARI : Yes , absolutely . # affirm ( ) [MASK] RC : Thank you . # thank ( ) [MASK] LP : Hmm , ARI , could you tell me how to get to the cafeteria ? # request ( directions ( cafe ) ) [MASK] ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) [MASK] RC : ARI , could you tell me if my appointment is at 11 AM ? # request ( appt ( time ) ) [MASK] ARI : Sorry , I do n't have this information . You have to go to the reception . LP : He might know how to get there . LP : Can you tell me how to get to the reception ? # request ( directions ( reception ) ) [MASK] ARI : The reception is just behind me . Remember to take a ticket on your right . # inform ( location ( reception ) ) [MASK] RC : Ah , thank you . # thank ( ) [MASK] LP : It 's quite simple . Thank you ARI . # thank ( ) ARI : You 're welcome . I 'm here to answer your questions . # offer-help ( ) [end] LP : It would be nice if we knew how to take the lift . LP : ARI , could you tell us how to get to the lift ? # request ( directions ( lifts ) ) @ G ( LP+RC , go-to ( lifts ) ) ARI : The lifts are at the entrance on the left . # inform ( location ( lifts ) ) @ AG ( LP+RC , go-to ( lifts ) ) LP : Do these lifts take us to the cafeteria , or do we have to take something else ? ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) RC : Is the cafeteria on the ground floor ? # request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : Yes , you 're right . # affirm ( ) RC : So we do n't have to take the lift to get to the cafeteria ? ARI : No , you do not . # disaffirm ( ) RC : Thank you . # thank ( ) LP : Thank you very much ARI . # thank ( ) ARI : You 're welcome , thank you , see you later and have a nice day . # thank ( ) ; bye ( )", "tgt": "ARI : From 11 AM to 4 PM . # inform ( cafe ( opening_times ) ) @ AG ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) RC : From 11 AM to 4 PM , is that right ? # r-confirm ( cafe ( opening_times ) ) @ G ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) ARI : Yes , you 're right . # p-confirm ( cafe ( opening_times ) ) @ AG ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) RC : Thank you . # thank ( ) @ CG ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) ARI : You 're welcome , I 'm here to answer your questions . # offer-help ( ) RC : Is the cafeteria wheelchair accessible ? Because my friend is in a wheelchair and he ca n't get around by himself . # request ( cafe ( accessible ) ) @ G ( RC , get-info ( cafe ( accessible ) ) ) ARI : Yes , absolutely . # affirm ( ) @ AG ( RC , get-info ( cafe ( accessible ) ) ) RC : Thank you . # thank ( ) @ CG ( RC , get-info ( cafe ( accessible ) ) ) LP : Hmm , ARI , could you tell me how to get to the cafeteria ? # request ( directions ( cafe ) ) @ G ( LP , go-to ( cafe ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) @ AG ( LP , go-to ( cafe ) ) RC : ARI , could you tell me if my appointment is at 11 AM ? # request ( appt ( time ) ) @ G ( RC , get-info ( appt ( time ) ) ) ARI : Sorry , I do n't have this information . You have to go to the reception . LP : He might know how to get there . LP : Can you tell me how to get to the reception ? # request ( directions ( reception ) ) @ G ( LP , go-to ( reception ) ) ARI : The reception is just behind me . Remember to take a ticket on your right . # inform ( location ( reception ) ) @ AG ( LP , go-to ( reception ) ) RC : Ah , thank you . # thank ( ) @ CG ( LP , go-to ( reception ) ) LP : It 's quite simple . Thank you ARI . # thank ( ) ARI : You 're welcome . I 'm here to answer your questions . # offer-help ( )"}
{"src": "ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) LP : Where is room 17 ? # request ( location ( room_17 ) ) @ G ( LP , go-to ( room_17 ) ) [start] ARI : The examination room is on the second floor . You just have to go to the counter on the left and then a nurse will come and take care of you . # inform ( location ( room_17 ) ) [MASK] RC : How do I get to room 17 ? Do I have to take the lift ? # request ( directions ( room_17 ) ) [MASK] ARI : The examination room is on the second floor . You just have to go to the counter on the left and then a nurse will come and take care of you . The lifts are at the entrance on the left . # inform ( directions ( room_17 ) ) [MASK] LP : How long before my appointment ? # request ( appt ( time ) ) [MASK] RC : ARI , can you ... sorry ... He is n't responding . # incomplete-da ( ) RC : ARI ? ARI : I 'll call a nurse to come and inform you . # call-nurse ( ) [end] RC : ARI , I do n't have a watch , is there a clock in the room so I can find out the time ? # request ( time ) @ G ( RC , get-info ( time ) ) ARI : Sorry , I do n't have this information . You have to go to the reception . # cant-help ( ) ; suggest ( going-to ( reception ) )", "tgt": "ARI : The examination room is on the second floor . You just have to go to the counter on the left and then a nurse will come and take care of you . # inform ( location ( room_17 ) ) @ AG ( LP , go-to ( room_17 ) ) RC : How do I get to room 17 ? Do I have to take the lift ? # request ( directions ( room_17 ) ) @ G ( RC , go-to ( room_17 ) ) ARI : The examination room is on the second floor . You just have to go to the counter on the left and then a nurse will come and take care of you . The lifts are at the entrance on the left . # inform ( directions ( room_17 ) ) @ AG ( RC , go-to ( room_17 ) ) LP : How long before my appointment ? # request ( appt ( time ) ) @ G ( LP , get-info ( appt ( time ) ) RC : ARI , can you ... sorry ... He is n't responding . # incomplete-da ( ) RC : ARI ? ARI : I 'll call a nurse to come and inform you . # call-nurse ( )"}
{"src": "LP : Well , yeah , but you do what you want . LP : What time is my appointment with the doctor ? # request ( appt ( time ) ) @ G ( LP , get-info ( appt ( time ) ) ) RC : I think it 's 10 o'clock . # inform ( appt ( time ) ) @ AG ( LP , get-info ( appt ( time ) ) ) RC : What time is the appointment ? # request ( appt ( time ) ) @ G ( RC , get-info ( appt ( time ) ) ) RC : I have an appointment with the doctor . # request ( appt ( general_info ) ) @ G ( RC , get-info ( appt ( general_info ) ) ) ARI : You 'll have several appointments with different health professionals , at least three . First , a nurse will ask you questions about your health and carry out an initial assessment of your current condition . Next , you will discuss your difficulties with a neuropsychologist who will suggest tests to assess your abilities as accurately as possible . Then , you will see a geriatrician who will summarise all this data and suggest different types of follow-up depending on your results . # inform ( appt ( general_info ) ) @ AG ( RC , get-info ( appt ( general_info ) ) ) LP : And who is my geriatrician ? ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) RC : That 's a shame . # give-feedback ( negative ) LP : And where is the consultation room to go see my doctor ? RC : Is it my turn ? ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Is it right or left ? LP : Is there a reception at the hospital ? # request ( location ( reception ) ) @ G ( LP , go-to ( reception ) ) RC : Yes , I think so . # affirm ( ) @ AG ( LP , go-to ( reception ) ) RC : Where is the reception ? # request ( location ( reception ) ) @ G ( RC , go-to ( reception ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) RC : Where do I go for information ? # request ( location ( reception ) ) @ G ( RC , go-to ( reception ) ) LP : I 'd like a coffee . # request ( beverage ( coffee ) ) @ G ( LP , drink ( coffee ) ) RC : Where is the cafeteria ? # request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( beverage ( coffee ) ) ; inform ( location ( cafe ) ) @ AG ( LP , drink ( coffee ) ) ; AG ( RC , go-to ( cafe ) ) LP : How do we get to the ground floor ? # request ( directions ( ground_floor ) ) @ G ( LP+RC , go-to ( ground_floor ) ) RC : How do we get to the ground floor ? # request ( directions ( ground_floor ) ) @ G ( LP+RC , go-to ( ground_floor ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Which floor is the cafeteria on ? # request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Where is the cafeteria ? # request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : How much time do we have for a coffee before the first consultation ? # request ( appt ( time ) ) @ G ( LP , get-info ( appt ( time ) ) ) ARI : You 'll have several appointments with different health professionals , at least three . First , a nurse will ask you questions about your health and carry out an initial assessment of your current condition . Next , you will discuss your difficulties with a neuropsychologist who will suggest tests to assess your abilities as accurately as possible . Then , you will see a geriatrician who will summarise all this data and suggest different types of follow-up depending on your results . # inform ( appt ( general_info ) ) @ AG ( LP , get-info ( appt ( time ) ) ) RC : Yes , but at what time ? # affirm ( ) ; request ( appt ( time ) ) @ G ( RC , get-info ( appt ( time ) ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) LP : I was told that there was a lift in the hospital to get to the next floor . Does he know where it is ? # request ( location ( lifts ) ) @ G ( LP , go-to ( lifts ) ) RC : Where is the lift to go up ? # request ( location ( lifts ) ) @ G ( RC , go-to ( lifts ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : Are there stairs ? # request ( location ( stairs ) ) @ G ( LP , go-to ( stairs ) ) RC : And the stairs ? # request ( location ( stairs ) ) @ G ( RC , go-to ( stairs ) ) [start] RC : Are there no stairs to get to the next floor ? # request ( location ( stairs ) ) [MASK] ARI : Yes , of course . # affirm ( ) [MASK] RC : And where are they ? # request ( location ( stairs ) ) [MASK] ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Where should I go for information ? # request ( location ( reception ) ) [MASK] ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : What should we do ? # request ( help ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : And how can it help us ? # request ( help ) RC : So this ... # incomplete-da ( ) RC : What can you tell us ? # request ( ari ( wcud ) ) [MASK] RC : How many floors does the hospital have ? # request ( clinic ( num_floors ) ) [MASK] ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : But I 'm thirsty . I need water . # request ( beverage ( water ) ) [MASK] RC : But we are thirsty , we need water . # request ( beverage ( water ) ) [MASK] ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( beverage ( water ) ) [MASK] RC : And is there water in the cafeteria ? # request ( beverage ( water ) ) [MASK] ARI : Of course . # affirm ( ) [MASK] LP : Is there coffee too ? # request ( beverage ( coffee ) ) [MASK] RC : And coffee ? Is there coffee ? # request ( beverage ( coffee ) ) [MASK] ARI : Absolutely . # affirm ( ) [MASK] [end] RC : And tea ? # request ( beverage ( tea ) ) @ G ( RC , drink ( tea ) ) ARI : Yes . # affirm ( ) @ AG ( RC , drink ( tea ) ) LP : What is there to eat ? # request ( food ( menu ) ) @ G ( LP , eat ( ) ) RC : What can we eat ? # request ( food ( menu ) ) @ G ( LP+RC , eat ( ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Are there no cakes ? # request ( food ( cake ) ) @ G ( RC , eat ( cake ) ) ARI : Yes . # affirm ( ) @ AG ( RC , eat ( cake ) ) RC : Oh . LP : Yes , there are cakes ? # r-confirm ( food ( cake ) ) @ G ( LP , eat ( cake ) ) RC : Yes , there are cakes . # p-confirm ( food ( cake ) ) @ AG ( LP , eat ( cake ) ) RC : What kind of cakes are there ? # request ( food ( cake ) ) @ G ( RC , eat ( cake ) ) ARI : Of course . # affirm ( ) @ AG ( LP , eat ( cake ) ) RC : Sugar cake ? Honey cake ? Are there honey cakes ? # request ( food ( cake ) ) @ G ( RC , eat ( cake ) ) ARI : Lunch will be offered at midday if you have afternoon appointments . A snack may be offered after your appointment with the nurse . # inform ( food ) @ AG ( RC , eat ( ) ) RC : Oh ! That 's nice . # give-feedback ( positive ) LP : What 's on the menu ? # request ( food ( menu ) ) @ G ( LP , eat ( ) ) RC : What 's on the menu ? # request ( food ( menu ) ) @ G ( RC , eat ( ) ) ARI : Lunch will be offered at midday if you have afternoon appointments . A snack may be offered after your appointment with the nurse . # inform ( food ) @ AG ( LP , eat ( ) ) ; AG ( RC , eat ( ) ) RC : Is there any ham ? # request ( food ( ham ) ) @ G ( RC , eat ( ham ) ) ARI : Yes . # affirm ( ) @ AG ( RC , eat ( ham ) ) LP : How do we inform them of any allergies ? # request ( allergy_info ) @ G ( LP , get-info ( allergy_info ) ) RC : And what should you do if you have an allergy ? # request ( allergy_info ) @ G ( RC , get-info ( allergy_info ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : If you are ill , if you ca n't eat ...", "tgt": "RC : Are there no stairs to get to the next floor ? # request ( location ( stairs ) ) @ G ( RC , go-to ( stairs ) ) ARI : Yes , of course . # affirm ( ) @ AG ( LP , go-to ( stairs ) ) ; AG ( RC , go-to ( stairs ) ) RC : And where are they ? # request ( location ( stairs ) ) @ G ( RC , go-to ( stairs ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : Where should I go for information ? # request ( location ( reception ) ) @ G ( RC , go-to ( reception ) ) ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : What should we do ? # request ( help ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : And how can it help us ? # request ( help ) RC : So this ... # incomplete-da ( ) RC : What can you tell us ? # request ( ari ( wcud ) ) @ G ( RC , get-info ( ari ( wcud ) ) ) RC : How many floors does the hospital have ? # request ( clinic ( num_floors ) ) @ G ( RC , get-info ( clinic ( num_floors ) ) ) ARI : I 'm sorry , but I ca n't help you . # cant-help ( ) LP : But I 'm thirsty . I need water . # request ( beverage ( water ) ) @ G ( LP , drink ( water ) ) RC : But we are thirsty , we need water . # request ( beverage ( water ) ) @ G ( LP+RC , drink ( water ) ) ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( beverage ( water ) ) @ AG ( LP+RC , drink ( water ) RC : And is there water in the cafeteria ? # request ( beverage ( water ) ) @ G ( RC , drink ( water ) ) ARI : Of course . # affirm ( ) @ AG ( RC , drink ( water ) ) LP : Is there coffee too ? # request ( beverage ( coffee ) ) @ G ( LP , drink ( coffee ) ) RC : And coffee ? Is there coffee ? # request ( beverage ( coffee ) ) @ G ( RC , drink ( coffee ) ) ARI : Absolutely . # affirm ( ) @ AG ( LP , drink ( coffee ) ) ; AG ( RC , drink ( coffee ) )"}
{"src": "ARI : Hello , my name is ARI . Can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) RC : Hello ARI , actually , it 's midday and I 'd like to go to the restaurant , what time does it open ? # greet ( ) ; request ( location ( cafe ) ) ; request ( cafe ( opening_times ( opening_time ) ) ) @ G ( RC , go-to ( cafe ) ) ; G ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) ) ARI : At 11 AM . # inform ( cafe ( opening_times ( opening_time ) ) ) @ AG ( RC , get-info ( cafe ( opening_times ( opening_time ) ) ) ) [start] RC : 11 AM , thank you . And , where is it ? Where should I go ? Is it upstairs or on the ground floor ? # thank ( ) ; request ( location ( cafe ) ) [MASK] ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) [MASK] RC : Thank you ARI . # thank ( ) [MASK] ARI : You 're welcome . # youre-welcome ( ) ARI : How can I help you ? # offer-help ( ) LP : Where can we eat at lunchtime ? # request ( food ) [MASK] ARI : There 's a cafeteria on the ground floor , near the courtyard . You can order hot or cold sandwiches as well as hot or cold drinks . # inform ( food ) [MASK] LP : It 's ... yes , yes . I did n't quite understand . # r-repet ( inform ( food ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . You can order hot or cold sandwiches as well as hot or cold drinks . # p-repet ( inform ( food ) ) [MASK] LP : Where are the toilets ? # request ( location ( toilet ) ) [MASK] ARI : Very easy ! You have to go to the corridor at the end of the room . # inform ( location ( toilet ) ) [MASK] LP : Right or left ? ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : I 'm in a wheelchair , are the toilets wheelchair accessible ? # request ( toilet ( is_accessible ) ) [MASK] [end] ARI : Yes , absolutely . # affirm ( ) @ AG ( RC , get-info ( toilet ( is_accessible ) ) ) RC : Thank you . # thank ( ) @ CG ( RC , get-info ( toilet ( is_accessible ) ) )", "tgt": "RC : 11 AM , thank you . And , where is it ? Where should I go ? Is it upstairs or on the ground floor ? # thank ( ) ; request ( location ( cafe ) ) @ G ( RC , go-to ( cafe ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) @ AG ( RC , go-to ( cafe ) ) RC : Thank you ARI . # thank ( ) @ CG ( RC , go-to ( cafe ) ) ARI : You 're welcome . # youre-welcome ( ) ARI : How can I help you ? # offer-help ( ) LP : Where can we eat at lunchtime ? # request ( food ) @ G ( LP+RC , eat ( ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . You can order hot or cold sandwiches as well as hot or cold drinks . # inform ( food ) @ AG ( LP+RC , eat ( ) ) LP : It 's ... yes , yes . I did n't quite understand . # r-repet ( inform ( food ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . You can order hot or cold sandwiches as well as hot or cold drinks . # p-repet ( inform ( food ) ) @ AG ( LP+RC , eat ( ) ) LP : Where are the toilets ? # request ( location ( toilet ) ) @ G ( LP , go-to ( toilet ) ) ARI : Very easy ! You have to go to the corridor at the end of the room . # inform ( location ( toilet ) ) @ AG ( LP , go-to ( toilet ) ) LP : Right or left ? ARI : I 'm afraid I ca n't help you . # cant-help ( ) RC : I 'm in a wheelchair , are the toilets wheelchair accessible ? # request ( toilet ( is_accessible ) ) @ G ( RC , get-info ( toilet ( is_accessible ) ) )"}
{"src": "ARI : Hello . My name is ARI . Can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) RC : Yes , I do . I have to go and see someone who 's hospitalised and I ca n't remember the ward . It 's room 17 . Can you please tell me where it is ? # request ( location ( room_17 ) ) @ G ( RC , go-to ( room_17 ) ) [start] ARI : You continue along the building , take the lift , and it 's on the second floor . # inform ( directions ( room_17 ) ) [MASK] RC : Ok , thank you . # acknowledge ( ) ; thank ( ) [MASK] ARI : Thank you . # thank ( ) LP : Look , I have an appointment , but um , for my friend who is here . I ca n't remember the appointment time . Could you tell me ? # request ( appt ( time ) ) [MASK] ARI : Sorry , I do n't have this information . You have to go to the reception . # cant-help ( ) ; suggest ( going-to ( reception ) ) LP : Ok , thank you . Where is the reception ? # acknowledge ( ) ; thank ( ) ; request ( location ( reception ) ) [MASK] ARI : You have to enter the second building behind you . Then it 's the second door on the left . # inform ( directions ( reception ) ) [MASK] LP : Ok , thank you . # acknowledge ( ) ; thank ( ) [MASK] RC : I have an appointment at 5 o'clock in the cardiology department . I do n't know where that is . Could you tell me please ? # request ( location ( cardiology_department ) ) [MASK] [end] ARI : Sorry , I do n't have this information . I 'll call a nurse to come and help you . # cant-help ( ) ; call-nurse ( ) ARI : Thank you . See you soon . Have a nice day . # thank ( ) ; bye ( ) RC : Thank you , bye . # thank ( ) ; bye ( ) LP : See you soon . You too , have a nice day . # bye ( )", "tgt": "ARI : You continue along the building , take the lift , and it 's on the second floor . # inform ( directions ( room_17 ) ) @ AG ( RC , go-to ( room_17 ) ) RC : Ok , thank you . # acknowledge ( ) ; thank ( ) @ CG ( RC , go-to ( room_17 ) ) ARI : Thank you . # thank ( ) LP : Look , I have an appointment , but um , for my friend who is here . I ca n't remember the appointment time . Could you tell me ? # request ( appt ( time ) ) @ G ( LP , get-info ( appt ( time ) ) ) ARI : Sorry , I do n't have this information . You have to go to the reception . # cant-help ( ) ; suggest ( going-to ( reception ) ) LP : Ok , thank you . Where is the reception ? # acknowledge ( ) ; thank ( ) ; request ( location ( reception ) ) @ G ( LP , go-to ( reception ) ) ARI : You have to enter the second building behind you . Then it 's the second door on the left . # inform ( directions ( reception ) ) @ AG ( LP , go-to ( reception ) ) LP : Ok , thank you . # acknowledge ( ) ; thank ( ) @ CG ( LP , go-to ( reception ) ) RC : I have an appointment at 5 o'clock in the cardiology department . I do n't know where that is . Could you tell me please ? # request ( location ( cardiology_department ) ) @ G ( RC , go-to ( cardiology_department ) )"}
