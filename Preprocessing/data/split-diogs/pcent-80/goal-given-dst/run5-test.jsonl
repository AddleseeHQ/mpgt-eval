{"src": "ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) [start] LP : Hello , I 'd like to know where my doctor 's office is ? I have an appointment with her at 3 PM . # greet ( ) ; request ( doctor ( room ) ) [MASK] RC : Do you have an appointment at 3 PM ? ARI : You have to enter the second building behind you . Then it 's the second door on the left . # inform ( directions ( doctor ( room ) ) [MASK] RC : Ah , that 's very good ARI . # acknowledge ( ) ; give-feedback ( positive ) [MASK] RC : Do we have time for a coffee before we go ? # request ( beverage ( coffee ) ) [MASK] ARI : Yes , of course . RC : So where can we get a coffee ? # request ( beverage ( coffee ) ) [MASK] ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) [MASK] RC : I do n't think ARI heard because you spoke at the same time as him . ARI : Sorry , can you repeat that please ? # r-repet ( ) ARI : Do you need information ? # offer-help ( ) [end] RC : Well , we 'd just like to know where we can get a hot chocolate . # request ( beverage ( hot_chocolate ) ) @ G ( LP+RC , drink ( hot ( chocolate ) ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) @ AG ( LP+RC , drink ( hot_chocolate ) ) RC : Ah , yes . # acknowledge ( ) ARI : You can order hot or cold sandwiches as well as hot or cold drinks . # inform ( food ) ; inform ( drink ) @ AG ( LP+RC , drink ( hot_chocolate ) ) RC : Ah , that 's good , we 'll go there . We have time before the appointment . # acknowledge ( )", "tgt": "LP : Hello , I 'd like to know where my doctor 's office is ? I have an appointment with her at 3 PM . # greet ( ) ; request ( doctor ( room ) ) @ G ( LP , get-info ( doctor ( room ) ) RC : Do you have an appointment at 3 PM ? ARI : You have to enter the second building behind you . Then it 's the second door on the left . # inform ( directions ( doctor ( room ) ) @ AG ( LP , go-to ( doctor ( room ) ) RC : Ah , that 's very good ARI . # acknowledge ( ) ; give-feedback ( positive ) @ CG ( LP , go-to ( doctor ( room ) ) RC : Do we have time for a coffee before we go ? # request ( beverage ( coffee ) ) @ G ( RC , drink ( coffee ) ) ARI : Yes , of course . RC : So where can we get a coffee ? # request ( beverage ( coffee ) ) @ G ( LP+RC , drink ( coffee ) ) ARI : There 's a cafeteria on the ground floor , near the courtyard . # inform ( location ( cafe ) ) @ AG ( LP+RC , drink ( coffee ) ) RC : I do n't think ARI heard because you spoke at the same time as him . ARI : Sorry , can you repeat that please ? # r-repet ( ) ARI : Do you need information ? # offer-help ( )"}
{"src": "ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) [start] LC : What time is it , please ? # request ( time ) [MASK] ARI : I 'm sorry , I do n't know the answer . # cant-help ( ) LC : Yeah , well it 's not much . # acknowledge ( ) RP : Is there a reception for people who have an appointment like me ? # request ( location ( reception ) ) [MASK] ARI : Yes , of course . The reception is just behind me . Remember to take a ticket on your right . # affirm ( ) ; inform ( location ( reception ) ) [MASK] RP : Thank you . # thank ( ) [MASK] LC : Can we have a coffee ? # request ( beverage ( coffee ) ) [MASK] ARI : You 're welcome . # youre-welcome ( ) LC : Can we have a coffee while we wait ? # request ( beverage ( coffee ) ) [MASK] ARI : Yes . There 's a cafeteria on the ground floor , near the courtyard . # affirm ( ) ; inform ( beverage ( coffee ) ) [MASK] RP : Do you know the price of a coffee ? # request ( beverage ( coffee ( cost ) ) ) [MASK] ARI : No . Sorry , I do n't have this information . # disaffirm ( ) ; cant-help ( ) LC : Is the coffee from a vending machine or a cafeteria ? [end] ARI : I 'm afraid I ca n't help you . # cant-help ( ) LC : Go ahead . ARI : Can I help you ? # offer-help ( ) RP : I can ask ... # incomplete-da ( ) RP : Is the cafeteria open at this time ? It 's 6 PM , is the cafeteria still open ? # request ( cafe ( opening_times ( ) ) @ G ( RP , get-info ( cafe ( opening_times ) ) ) ARI : No . The cafeteria is open from 11 AM to 3 PM . # disaffirm ( ) ; inform ( cafe ( opening_times ) ) @ AG ( RP , get-info ( cafe ( opening_times ) ) )", "tgt": "LC : What time is it , please ? # request ( time ) @ G ( LC , get-info ( time ) ) ARI : I 'm sorry , I do n't know the answer . # cant-help ( ) LC : Yeah , well it 's not much . # acknowledge ( ) RP : Is there a reception for people who have an appointment like me ? # request ( location ( reception ) ) @ G ( RP , go-to ( reception ) ) ARI : Yes , of course . The reception is just behind me . Remember to take a ticket on your right . # affirm ( ) ; inform ( location ( reception ) ) @ AG ( RP , go-to ( reception ) ) RP : Thank you . # thank ( ) @ CG ( RP , go-to ( reception ) ) LC : Can we have a coffee ? # request ( beverage ( coffee ) ) @ G ( LC+RP , drink ( coffee ) ) ARI : You 're welcome . # youre-welcome ( ) LC : Can we have a coffee while we wait ? # request ( beverage ( coffee ) ) @ G ( LC+RP , drink ( coffee ) ) ARI : Yes . There 's a cafeteria on the ground floor , near the courtyard . # affirm ( ) ; inform ( beverage ( coffee ) ) @ AG ( LC+RP , drink ( coffee ) ) RP : Do you know the price of a coffee ? # request ( beverage ( coffee ( cost ) ) ) @ G ( RP , get-info ( beverage ( coffee ( cost ) ) ) ) ARI : No . Sorry , I do n't have this information . # disaffirm ( ) ; cant-help ( ) LC : Is the coffee from a vending machine or a cafeteria ?"}
{"src": "ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) RC : Hello ARI . # greet ( ) [start] LP : I need to go to room 17 for treatment . So , I do n't know how to get to room 17 . # request ( directions ( room_17 ) ) [MASK] RC : ARI , could you please tell us how to get to room 17 ? For a ... # request ( directions ( room_17 ) ) [MASK] ARI : Yes . You continue along the building , take the lift and it 's on the second floor . # affirm ( ) ; inform ( directions ( room_17 ) ) [MASK] RC : Ok. And is it on the left or the right ... on the second floor ? # acknowledge ( ) ; request ( location ( room_17 ) ) [MASK] ARI : Sorry , I do n't have this information . You have to go to the reception . # cant-help ( ) ; suggest ( going-to ( reception ) ) RC : Ok . The reception is on the ground floor , is that right ? # acknowledge ( ) ; request ( location ( reception ) ) [MASK] ARI : Yes . Absolutely . # affirm ( ) [MASK] LP : Are we , are we expected in room 17 ? Is there someone who will see us or guide us ? RC : Yes , do you know if there is someone who will come and welcome us to room 17 ? And what paperwork do we need to provide ? ARI : I 'll call a nurse to find out . Sorry , I do n't have this information . # call-nurse ( ) ; cant-help ( ) RC : Ok , thank you , I 'll wait for you to call the nurse then . # thank ( ) ARI : Yes . # affirm ( ) RC : Can I sit somewhere with my husband while I wait ? # request ( chair ) [MASK] ARI : Yes . Of course . # affirm ( ) [MASK] LP : I have an appointment at 12.30 PM , is it going ahead ? I 'm not late or too early ? RC : Um , we have ... # incomplete-da ( ) ARI : Sorry , I do n't have this information . # cant-help ( ) RC : I 'm the one you have to talk to because if not ... LP : I have an appointment at 12.30 PM . Will there be any delay ? [end] RC : Um hello , we would like to know if there is a delay to welcome us to room 17 , we have an appointment in room 17 . ARI : No . # disaffirm ( ) RC : Because we have another appointment later in another department . ARI : Yes . Of course . # affirm ( ) LP : Do you know what type of appointment I have , is it an anaesthetist , a surgeon , who 'll inform me or something else or an examination ? RC : I did n't quite understand . # r-paraph ( ) LP : Um , I have an appointment , is it , is it a treatment this time , is it a surgeon , an anaesthetist or a radiologist who 'll take ... # p-paraph ( ) RC : Hello , are you able to tell me who is going to see us ? Is it an an anaesthetist , the surgeon , a nurse ? For this ... for this operation . ARI : Sorry , I do n't have this information . You have to go to the reception . # cant-help ( ) ; suggest ( going-to ( reception ) ) RC : Ok , thank you . # acknowledge ( ) ; thank ( ) ARI : Thank you . See you soon . Have a nice day . # thank ( ) ; bye ( )", "tgt": "LP : I need to go to room 17 for treatment . So , I do n't know how to get to room 17 . # request ( directions ( room_17 ) ) @ G ( LP , go-to ( room_17 ) ) RC : ARI , could you please tell us how to get to room 17 ? For a ... # request ( directions ( room_17 ) ) @ G ( LP+RC , go-to ( room_17 ) ) ARI : Yes . You continue along the building , take the lift and it 's on the second floor . # affirm ( ) ; inform ( directions ( room_17 ) ) @ AG ( LP+RC , go-to ( room_17 ) ) RC : Ok. And is it on the left or the right ... on the second floor ? # acknowledge ( ) ; request ( location ( room_17 ) ) @ CG ( LP+RC , go-to ( room_17 ) ) ; G ( RC , go-to ( room_17 ) ) ARI : Sorry , I do n't have this information . You have to go to the reception . # cant-help ( ) ; suggest ( going-to ( reception ) ) RC : Ok . The reception is on the ground floor , is that right ? # acknowledge ( ) ; request ( location ( reception ) ) @ G ( RC , go-to ( reception ) ) ARI : Yes . Absolutely . # affirm ( ) @ AG ( RC , go-to ( reception ) ) LP : Are we , are we expected in room 17 ? Is there someone who will see us or guide us ? RC : Yes , do you know if there is someone who will come and welcome us to room 17 ? And what paperwork do we need to provide ? ARI : I 'll call a nurse to find out . Sorry , I do n't have this information . # call-nurse ( ) ; cant-help ( ) RC : Ok , thank you , I 'll wait for you to call the nurse then . # thank ( ) ARI : Yes . # affirm ( ) RC : Can I sit somewhere with my husband while I wait ? # request ( chair ) @ G ( RC , sit ( ) ) ARI : Yes . Of course . # affirm ( ) @ AG ( RC , sit ( ) ) LP : I have an appointment at 12.30 PM , is it going ahead ? I 'm not late or too early ? RC : Um , we have ... # incomplete-da ( ) ARI : Sorry , I do n't have this information . # cant-help ( ) RC : I 'm the one you have to talk to because if not ... LP : I have an appointment at 12.30 PM . Will there be any delay ?"}
{"src": "LC : Hello . # greet ( ) ARI : Hello , my name is ARI . How can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) [start] LC : We 're looking for a way to get to room 17 , are n't we ? # request ( directions ( room_17 ) ) [MASK] RP : Yes . # affirm ( ) RP : Yes , we need to go to room 17 for treatment . # request ( directions ( room_17 ) ) [MASK] ARI : You have to enter the second building behind you . Then it 's the second door on the left . # inform ( directions ( room_17 ) ) [MASK] LC : Thank you . # thank ( ) [MASK] RP : Thank you . # thank ( ) LC : Do you , do you know what time our appointment is ? # request ( appt ( time ) ) [MASK] RP : Do you need the name ? ARI : You 'll have several appointments with different health professionals , at least three . First , a nurse will ask you questions about your health and carry out an initial assessment of your current condition . Next , you will discuss your difficulties with a neuropsychologist who will suggest tests to assess your abilities as accurately as possible . Then , you will see a geriatrician who will summarise all this data and suggest different types of follow-up depending on your results . # inform ( appt ( general_info ) ) RP : Thank you , but I ca n't hear very well . Could n't you speak a little louder ? # thank ( ) ; change-volume ( turn_up ) [end] ARI : Sorry , but I ca n't help you . # cant-help ( ) LC : Ok. # acknowledge ( ) RP : Thank you . # thank ( ) ARI : You 're welcome , I 'm here to answer your questions . # offer-help ( ) LC : Thank you ARI , have a nice day . # thank ( ) ; bye ( ) RP : Thank you . # thank ( ) ARI : Thank you , see you around , have a nice day . # thank ( ) ; bye ( )", "tgt": "LC : We 're looking for a way to get to room 17 , are n't we ? # request ( directions ( room_17 ) ) @ G ( LC+RP , go-to ( room_17 ) ) RP : Yes . # affirm ( ) RP : Yes , we need to go to room 17 for treatment . # request ( directions ( room_17 ) ) @ G ( LC+RP , go-to ( room_17 ) ) ARI : You have to enter the second building behind you . Then it 's the second door on the left . # inform ( directions ( room_17 ) ) @ AG ( LC+RP , go-to ( room_17 ) ) LC : Thank you . # thank ( ) @ CG ( LC+RP , go-to ( room_17 ) ) RP : Thank you . # thank ( ) LC : Do you , do you know what time our appointment is ? # request ( appt ( time ) ) @ G ( LC , get-info ( appt ( time ) ) ) RP : Do you need the name ? ARI : You 'll have several appointments with different health professionals , at least three . First , a nurse will ask you questions about your health and carry out an initial assessment of your current condition . Next , you will discuss your difficulties with a neuropsychologist who will suggest tests to assess your abilities as accurately as possible . Then , you will see a geriatrician who will summarise all this data and suggest different types of follow-up depending on your results . # inform ( appt ( general_info ) ) RP : Thank you , but I ca n't hear very well . Could n't you speak a little louder ? # thank ( ) ; change-volume ( turn_up )"}
{"src": "ARI : Hello . I 'm ARI the robot . Can I help you ? # greet ( ) ; inform ( ari ( name ) ) ; offer-help ( ) RP : I have an appointment . I 'd like to know where I 've got to ... where is ... where is the appointment for um , the geriatric ward . # request ( appt ( place ) ) @ G ( RP , get-info ( appt ( place ) ) ) ARI : Sorry , I do n't have this information . You have to go to the reception . # cant-help ( ) ; suggest ( going-to ( reception ) ) RP : For any appointment , I have to go to the reception ? Because ARI : Yes . # affirm ( ) [start] RP : I have two appointments in a row . ARI : Yes , absolutely . # affirm ( ) RP : Ok well , thank you . That 's a shame then . # acknowledge ( ) ; thank ( ) ; give-feedback ( negative ) ARI : Thank you . # thank ( ) LC : Um , hello . Could you help me ? # greet ( ) ; request ( help ) ARI : Yes . # affirm ( ) LC : Um , can you tell me where I can get a coffee please ? # request ( beverage ( coffee ) ) [MASK] LC : You know , I 'd really like a coffee . # request ( beverage ( coffee ) ) [MASK] ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( beverage ( coffee ) ) [MASK] LC : Thank you . # thank ( ) [MASK] ARI : Thank you . See you soon . # thank ( ) ; bye ( ) RP : Can you # incomplete-da ( ) ARI : Have a nice day . # bye ( ) RP : repeat what you said about coffee ? I did n't hear it very well . # r-repet ( beverage ( coffee ) ) ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # p-repet ( beverage ( coffee ) ) RP : And , can a patient accompany me or can I accompany a patient to the cafeteria ? ARI : Yes . Of course . # affirm ( ) RP : Ok . Thank you . # acknowledge ( ) ; thank ( ) ARI : Thank you . See you around . # thank ( ) ; bye ( ) RP : In the cafeteria # incomplete-da ( ) ARI : Have a nice day . # bye ( ) RP : do they serve food too or just drinks ? # request ( food ) [MASK] ARI : Yes , absolutely . # affirm ( ) [MASK] RP : And what time does the cafeteria close ? # request ( cafe ( opening_times ( closing_time ) ) ) [end] ARI : It 's at 11 o'clock . # inform ( cafe ( opening_times ( closing_time ) ) ) RP : At 11 o'clock ? # r-confirm ( cafe ( opening_times ( closing_time ) ) ) RP : Um ... # incomplete-da ( ) RP : Thank you . # thank ( ) ARI : Thank you , see you around , have a nice day . # thank ( ) ; bye ( )", "tgt": "RP : I have two appointments in a row . ARI : Yes , absolutely . # affirm ( ) RP : Ok well , thank you . That 's a shame then . # acknowledge ( ) ; thank ( ) ; give-feedback ( negative ) ARI : Thank you . # thank ( ) LC : Um , hello . Could you help me ? # greet ( ) ; request ( help ) ARI : Yes . # affirm ( ) LC : Um , can you tell me where I can get a coffee please ? # request ( beverage ( coffee ) ) @ G ( LC , drink ( coffee ) ) LC : You know , I 'd really like a coffee . # request ( beverage ( coffee ) ) @ G ( LC , drink ( coffee ) ) ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # inform ( beverage ( coffee ) ) @ AG ( LC , drink ( coffee ) ) LC : Thank you . # thank ( ) @ CG ( LC , drink ( coffee ) ) ARI : Thank you . See you soon . # thank ( ) ; bye ( ) RP : Can you # incomplete-da ( ) ARI : Have a nice day . # bye ( ) RP : repeat what you said about coffee ? I did n't hear it very well . # r-repet ( beverage ( coffee ) ) ARI : There are a few options available as part of your visit , and there 's also a cafeteria on the ground floor . # p-repet ( beverage ( coffee ) ) RP : And , can a patient accompany me or can I accompany a patient to the cafeteria ? ARI : Yes . Of course . # affirm ( ) RP : Ok . Thank you . # acknowledge ( ) ; thank ( ) ARI : Thank you . See you around . # thank ( ) ; bye ( ) RP : In the cafeteria # incomplete-da ( ) ARI : Have a nice day . # bye ( ) RP : do they serve food too or just drinks ? # request ( food ) @ G ( RP , eat ( ) ) ARI : Yes , absolutely . # affirm ( ) @ AG ( RP , eat ( ) ) RP : And what time does the cafeteria close ? # request ( cafe ( opening_times ( closing_time ) ) )"}
